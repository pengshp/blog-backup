<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Vicent&#39;s Blog!</title>
  
  <subtitle>个人博客，记录点滴!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.crazylinux.cc/"/>
  <updated>2019-05-20T21:51:34.000Z</updated>
  <id>https://blog.crazylinux.cc/</id>
  
  <author>
    <name>pengshp</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CentOS 防火墙 firewalld 的管理</title>
    <link href="https://blog.crazylinux.cc/post/2019/centos-firewall-manage/"/>
    <id>https://blog.crazylinux.cc/post/2019/centos-firewall-manage/</id>
    <published>2019-05-18T12:59:06.000Z</published>
    <updated>2019-05-20T21:51:34.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://t1.picb.cc/uploads/2019/05/18/gZeYlJ.png" alt="gZeYlJ.png"></p><p>CentOS7.x 使用firewalld 防火墙替代了 CentOS6.x 中的 iptables,两者的使用上有较大的区别，本文介绍firewall在日常的使用和管理中常使用的一些基本命令。</p><a id="more"></a><h3 id="一、firewall基本管理"><a href="#一、firewall基本管理" class="headerlink" title="一、firewall基本管理"></a>一、firewall基本管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开启防火墙服务</span></span><br><span class="line">$ sudo systemctl start firewalld.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭防火墙</span></span><br><span class="line">$ sudo systemctl stop firewalld.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开机自启</span></span><br><span class="line">$ sudo systemctl <span class="built_in">enable</span> firewalld.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭开机自启</span></span><br><span class="line">$ sudo systemctl <span class="built_in">disable</span> firewalld.service</span><br></pre></td></tr></table></figure><h3 id="二、firewall-cmd"><a href="#二、firewall-cmd" class="headerlink" title="二、firewall-cmd"></a>二、firewall-cmd</h3><h4 id="1、查看状态"><a href="#1、查看状态" class="headerlink" title="1、查看状态"></a>1、查看状态</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ firewall-cmd --state</span><br><span class="line"><span class="comment"># running表示运行</span></span><br></pre></td></tr></table></figure><h4 id="2、获取活动的区域"><a href="#2、获取活动的区域" class="headerlink" title="2、获取活动的区域"></a>2、获取活动的区域</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ firewall-cmd --get-active-zones</span><br></pre></td></tr></table></figure><h4 id="3、获取所有支持的服务"><a href="#3、获取所有支持的服务" class="headerlink" title="3、获取所有支持的服务"></a>3、获取所有支持的服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ firewall-cmd --get-service</span><br></pre></td></tr></table></figure><h4 id="4、开放某个服务"><a href="#4、开放某个服务" class="headerlink" title="4、开放某个服务"></a>4、开放某个服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 临时，重启后失效</span></span><br><span class="line">$ firewall-cmd --zone=public --add-service=https</span><br><span class="line"></span><br><span class="line"><span class="comment"># 永久</span></span><br><span class="line">$ firewall-cmd --permanent --zone=public --add-service=https</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重载防火墙使生效</span></span><br><span class="line">$ firewall-cmd --reload</span><br></pre></td></tr></table></figure><h4 id="5、开放某个端口"><a href="#5、开放某个端口" class="headerlink" title="5、开放某个端口"></a>5、开放某个端口</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 临时</span></span><br><span class="line">$ firewall-cmd --zone=public --add-port=8080/tcp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 永久</span></span><br><span class="line">$ firewall-cmd --permanent --zone=public --add-port=8080/tcp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重载防火墙使生效</span></span><br><span class="line">$ firewall-cmd --reload</span><br></pre></td></tr></table></figure><h4 id="6、查看开启的服务和端口"><a href="#6、查看开启的服务和端口" class="headerlink" title="6、查看开启的服务和端口"></a>6、查看开启的服务和端口</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 开启的服务</span><br><span class="line">$ firewall-cmd --permanent --zone&#x3D;public --list-services</span><br><span class="line"></span><br><span class="line"># 开启的端口</span><br><span class="line">$ firewall-cmd --permanent --zone&#x3D;public --list-ports</span><br></pre></td></tr></table></figure><h4 id="7、查询服务的启用状态"><a href="#7、查询服务的启用状态" class="headerlink" title="7、查询服务的启用状态"></a>7、查询服务的启用状态</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ firewall-cmd ---query-service http</span><br></pre></td></tr></table></figure><p>常用的命令如上所示，基本能够满足日常管理和使用。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://t1.picb.cc/uploads/2019/05/18/gZeYlJ.png&quot; alt=&quot;gZeYlJ.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;CentOS7.x 使用firewalld 防火墙替代了 CentOS6.x 中的 iptables,两者的使用上有较大的区别，本文介绍firewall在日常的使用和管理中常使用的一些基本命令。&lt;/p&gt;
    
    </summary>
    
    
      <category term="CentOS" scheme="https://blog.crazylinux.cc/categories/CentOS/"/>
    
    
      <category term="CentOS" scheme="https://blog.crazylinux.cc/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>使用mosquitto设置一个MQTT服务</title>
    <link href="https://blog.crazylinux.cc/post/2019/setup-mqtt-server/"/>
    <id>https://blog.crazylinux.cc/post/2019/setup-mqtt-server/</id>
    <published>2019-05-16T14:51:04.000Z</published>
    <updated>2019-10-27T14:38:44.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://t1.picb.cc/uploads/2019/05/16/gtpNnc.md.png" alt="gtpNnc.md.png"></p><p>MQTT 是一种基于 pusblish/subscribe(发布/订阅)的消息通信协议，适用于 M2M (machine to machine)在低带宽条件下进行消息通信。广泛运用于物联网(IoT)领域。本文介绍使用 mosquitto 搭建一个 MQTT Broker。</p><a id="more"></a><h3 id="1、下载安装mosquito"><a href="#1、下载安装mosquito" class="headerlink" title="1、下载安装mosquito"></a>1、下载安装mosquito</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install -y mosquitto</span><br></pre></td></tr></table></figure><h3 id="2、修改配置文件"><a href="#2、修改配置文件" class="headerlink" title="2、修改配置文件"></a>2、修改配置文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/mosquitto/mosquitto.conf</span><br><span class="line">pid_file /var/run/mosquitto.pid</span><br><span class="line"></span><br><span class="line">persistence <span class="literal">true</span></span><br><span class="line">persistence_location /var/lib/mosquitto/</span><br><span class="line"></span><br><span class="line">log_dest file /var/<span class="built_in">log</span>/mosquitto/mosquitto.log</span><br><span class="line"></span><br><span class="line">include_dir /etc/mosquitto/conf.d</span><br><span class="line"></span><br><span class="line">bind_address 172.16.10.80 <span class="comment"># 绑定的IP地址</span></span><br><span class="line"></span><br><span class="line">allow_anonymous <span class="literal">false</span> <span class="comment"># 禁止匿名登录</span></span><br><span class="line">protocol mqtt</span><br><span class="line">password_file /etc/mosquitto/pwfile  <span class="comment">#密码文件</span></span><br><span class="line">port 1883  <span class="comment"># 监听的端口号</span></span><br><span class="line"></span><br><span class="line">max_connections 100 <span class="comment"># 最大连接数</span></span><br></pre></td></tr></table></figure><h3 id="3、设置密码"><a href="#3、设置密码" class="headerlink" title="3、设置密码"></a>3、设置密码</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 为用户mqtt设置一个密码</span></span><br><span class="line">$ mosquitto_passwd -c /etc/mosquitto/pwfile mqtt</span><br></pre></td></tr></table></figure><h3 id="4、启动服务"><a href="#4、启动服务" class="headerlink" title="4、启动服务"></a>4、启动服务</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl start mosquitto.service</span><br><span class="line">$ sudo systemctl <span class="built_in">enable</span> mosquitto.service</span><br></pre></td></tr></table></figure><h3 id="5、测试服务"><a href="#5、测试服务" class="headerlink" title="5、测试服务"></a>5、测试服务</h3><h4 id="订阅端"><a href="#订阅端" class="headerlink" title="订阅端"></a>订阅端</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mosquitto_sub -h 172.16.10.80 -d -u mqtt -P hello -t mqtt/<span class="built_in">test</span></span><br></pre></td></tr></table></figure><h4 id="发布端"><a href="#发布端" class="headerlink" title="发布端"></a>发布端</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mosquitto_pub -h 172.16.10.80 -d -u mqtt -P hello -t mqtt/<span class="built_in">test</span> -m <span class="string">"Hello!"</span></span><br></pre></td></tr></table></figure><blockquote><p>-h    指定MQTT的IP</p><p>-d    打开调试模式</p><p>-u    指定用户名</p><p>-P    指定密码</p><p>-t     指定主题Topic</p><p>-m   指定消息内容</p></blockquote><p>一端从 MQTT Broker 订阅一个主题，另一端向 MQTT Broker 发布主题，发布后订阅端便可以收到发布端发布的消息。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://t1.picb.cc/uploads/2019/05/16/gtpNnc.md.png&quot; alt=&quot;gtpNnc.md.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;MQTT 是一种基于 pusblish/subscribe(发布/订阅)的消息通信协议，适用于 M2M (machine to machine)在低带宽条件下进行消息通信。广泛运用于物联网(IoT)领域。本文介绍使用 mosquitto 搭建一个 MQTT Broker。&lt;/p&gt;
    
    </summary>
    
    
      <category term="IoT" scheme="https://blog.crazylinux.cc/categories/IoT/"/>
    
    
      <category term="IoT" scheme="https://blog.crazylinux.cc/tags/IoT/"/>
    
  </entry>
  
  <entry>
    <title>CentOS设置Fail2ban防SSH暴力破解</title>
    <link href="https://blog.crazylinux.cc/post/2019/setup-fail2ban/"/>
    <id>https://blog.crazylinux.cc/post/2019/setup-fail2ban/</id>
    <published>2019-05-16T10:45:14.000Z</published>
    <updated>2019-10-25T20:14:52.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://t1.picb.cc/uploads/2019/05/16/gtjqsr.png" alt="gtjqsr.png"><br>今天查看我的滴滴云服务器的时候，云监控里发现最近两天有两百多次的SSH暴力破解登录，查了下来源IP，都是韩国釜山，安徽什么的。真是防不胜防啊！于是决定研究下SSH的防暴力破解，我选择的程序是<code>Fail2ban</code>。下面介绍如何配置使用。</p><a id="more"></a><h3 id="1、下载安装"><a href="#1、下载安装" class="headerlink" title="1、下载安装"></a>1、下载安装</h3><p><code>Fail2ban</code>安装包在<code>epel</code>源里，如果没安装，需要装上。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install -y epel-release</span><br><span class="line">$ sudo yum install -y fail2ban fail2ban-systemd</span><br></pre></td></tr></table></figure><h3 id="2、修改配置文件"><a href="#2、修改配置文件" class="headerlink" title="2、修改配置文件"></a>2、修改配置文件</h3><p>主配置文件<code>/etc/fail2ban/jail.conf</code>不建议修改，自行建一个配置文件,它会覆盖主配置文件的配置项，这样便于管理，升级安装包时也不会被覆盖。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/fail2ban/jail.d/ssh.local</span><br><span class="line">[DEFAULT]</span><br><span class="line"><span class="comment"># 禁止一个IP24小时</span></span><br><span class="line">bantime = 86400</span><br><span class="line"></span><br><span class="line"><span class="comment"># 10分钟内尝试登陆5次失败便加入屏蔽列表</span></span><br><span class="line">findtime = 600</span><br><span class="line">maxretry = 5</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 覆写 /etc/fail2ban/jail.d/00-firewalld.conf:</span></span><br><span class="line">banaction = firewallcmd-ipset</span><br><span class="line">action = %(action_mwl)s</span><br><span class="line"></span><br><span class="line">[sshd]</span><br><span class="line">enabled = <span class="literal">true</span></span><br><span class="line">filter = sshd</span><br><span class="line">port = 22</span><br><span class="line">action = %(action_mwl)s</span><br><span class="line">logpath = /var/<span class="built_in">log</span>/secure</span><br></pre></td></tr></table></figure><h3 id="3、启动Fail2ban服务"><a href="#3、启动Fail2ban服务" class="headerlink" title="3、启动Fail2ban服务"></a>3、启动Fail2ban服务</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl start fail2ban.service</span><br><span class="line">$ sudo systemctl <span class="built_in">enable</span> fail2ban.service</span><br></pre></td></tr></table></figure><h3 id="4、查看ssh状态"><a href="#4、查看ssh状态" class="headerlink" title="4、查看ssh状态"></a>4、查看<code>ssh</code>状态</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ fail2ban-client status sshd</span><br><span class="line">Status <span class="keyword">for</span> the jail: sshd</span><br><span class="line">|- Filter</span><br><span class="line">|  |- Currently failed: 0</span><br><span class="line">|  |- Total failed:     0</span><br><span class="line">|  `- Journal matches:  _SYSTEMD_UNIT=sshd.service + _COMM=sshd</span><br><span class="line">`- Actions</span><br><span class="line">   |- Currently banned: 20</span><br><span class="line">   |- Total banned:     20</span><br><span class="line">   `- Banned IP list:   1.252.24.138 142.93.153.234 157.230.9.239 \</span><br><span class="line">   159.65.145.175 159.65.148.178 159.65.151.151 165.227.39.62 \</span><br><span class="line">   183.157.142.164 183.230.146.26 192.99.255.47 193.201.224.214 \</span><br><span class="line">   195.231.4.214 198.98.56.196 198.98.62.146 206.189.132.42 \</span><br><span class="line">   209.141.35.22 223.113.91.54 24.90.25.51 59.20.205.178 68.183.99.64</span><br></pre></td></tr></table></figure><h3 id="5、查看实时日志"><a href="#5、查看实时日志" class="headerlink" title="5、查看实时日志"></a>5、查看实时日志</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo tail -f /var/<span class="built_in">log</span>/fail2ban.log</span><br></pre></td></tr></table></figure><h3 id="6、最近一个启动fail2ban日志"><a href="#6、最近一个启动fail2ban日志" class="headerlink" title="6、最近一个启动fail2ban日志"></a>6、最近一个启动<code>fail2ban</code>日志</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">journalctl -b -u fail2ban</span><br></pre></td></tr></table></figure><h3 id="7、查看登录失败的日志"><a href="#7、查看登录失败的日志" class="headerlink" title="7、查看登录失败的日志"></a>7、查看登录失败的日志</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo cat /var/<span class="built_in">log</span>/secure |grep <span class="string">'Failed password'</span></span><br><span class="line">May 16 20:42:55 10-255-0-83 sshd[21804]: Failed password <span class="keyword">for</span> root from 185.244.25.105 port 35412 ssh2</span><br><span class="line">May 16 21:08:06 10-255-0-83 sshd[25255]: Failed password <span class="keyword">for</span> root from 40.73.39.211 port 41718 ssh2</span><br><span class="line">May 16 21:13:51 10-255-0-83 sshd[25935]: Failed password <span class="keyword">for</span> root from 105.103.132.251 port 19628 ssh2</span><br></pre></td></tr></table></figure><h3 id="8、解锁IP"><a href="#8、解锁IP" class="headerlink" title="8、解锁IP"></a>8、解锁IP</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ fail2ban-client <span class="built_in">set</span> sshd unbanip IP</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://t1.picb.cc/uploads/2019/05/16/gtjqsr.png&quot; alt=&quot;gtjqsr.png&quot;&gt;&lt;br&gt;今天查看我的滴滴云服务器的时候，云监控里发现最近两天有两百多次的SSH暴力破解登录，查了下来源IP，都是韩国釜山，安徽什么的。真是防不胜防啊！于是决定研究下SSH的防暴力破解，我选择的程序是&lt;code&gt;Fail2ban&lt;/code&gt;。下面介绍如何配置使用。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://blog.crazylinux.cc/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://blog.crazylinux.cc/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Python3爬虫百度翻译查词</title>
    <link href="https://blog.crazylinux.cc/post/2018/py-spider-bdfanyi/"/>
    <id>https://blog.crazylinux.cc/post/2018/py-spider-bdfanyi/</id>
    <published>2018-10-20T10:53:36.000Z</published>
    <updated>2018-10-26T08:52:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>百度翻译是一个不错的查词翻译网站，本文介绍使用Python3爬虫实现百度翻译查词的效果，主要的依赖是<code>requests</code>库。</p><a id="more"></a><h3 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h3><ul><li>Windows10 x64</li><li>PyCharm 2018.2</li><li>Python3.6.4</li></ul><h3 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h3><ul><li>requests<br>请求的API：<a href="https://fanyi.baidu.com/sug" target="_blank" rel="noopener">https://fanyi.baidu.com/sug</a></li></ul><h3 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;</span></span><br><span class="line"><span class="comment">#   @File Name:    bdfy.py</span></span><br><span class="line"><span class="comment">#   @Description:  百度翻译</span></span><br><span class="line"><span class="comment">#   @Author:       pengshp&lt;pengshp3@outlook.com&gt;</span></span><br><span class="line"><span class="comment">#   @date:         2018/10/14 0014</span></span><br><span class="line"><span class="comment"># &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">baiduFanyi</span><span class="params">(word)</span>:</span></span><br><span class="line">    <span class="string">"""百度翻译单词查询"""</span></span><br><span class="line">    url = <span class="string">'https://fanyi.baidu.com/sug'</span></span><br><span class="line">    header = &#123;</span><br><span class="line">        <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0"</span></span><br><span class="line">    &#125;</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">'kw'</span>: word</span><br><span class="line">    &#125;</span><br><span class="line">    response = requests.post(url, headers=header, data=data)</span><br><span class="line">    resData = response.json()  <span class="comment"># 把返回的json数据转为字典</span></span><br><span class="line">    result = resData[<span class="string">'data'</span>][<span class="number">0</span>].get(<span class="string">'v'</span>)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    word = input(<span class="string">'请输入你要查询的单词：'</span>)</span><br><span class="line">    print(baiduFanyi(word))</span><br></pre></td></tr></table></figure><p>主要是使用requests库的<code>post</code>请求方法请求百度翻译的<code>API</code>，把返回的<code>json</code>数据转为字典，再提取数据。</p><h3 id="运行测试"><a href="#运行测试" class="headerlink" title="运行测试"></a>运行测试</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">~$ python3 bdfy.py</span><br><span class="line">请输入你要查询的单词：python</span><br><span class="line">n. 巨蛇，大蟒;</span><br></pre></td></tr></table></figure><h3 id="使用Google-Fire封装为CLi"><a href="#使用Google-Fire封装为CLi" class="headerlink" title="使用Google Fire封装为CLi"></a>使用<code>Google Fire</code>封装为<code>CLi</code></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding:UTF-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># @Version: v1.0</span></span><br><span class="line"><span class="comment"># @Author: pengshp&lt;pengshp3@outlook.com&gt;</span></span><br><span class="line"><span class="comment"># @License: Apache Licence 2.0</span></span><br><span class="line"><span class="comment"># @Description: 百度翻译API</span></span><br><span class="line"><span class="comment"># @File: bdfy.py</span></span><br><span class="line"><span class="comment"># @Date: 10月 26,2018</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> fire</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">baiduFanyi</span><span class="params">(word)</span>:</span></span><br><span class="line">    <span class="string">"""百度翻译单词查询"""</span></span><br><span class="line">    url = <span class="string">'https://fanyi.baidu.com/sug'</span></span><br><span class="line">    header = &#123;</span><br><span class="line">        <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0"</span></span><br><span class="line">    &#125;</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">'kw'</span>: word</span><br><span class="line">    &#125;</span><br><span class="line">    response = requests.post(url, headers=header, data=data)</span><br><span class="line">    resData = response.json()  <span class="comment"># 把返回的json数据转为字典</span></span><br><span class="line">    result = resData[<span class="string">'data'</span>][<span class="number">0</span>].get(<span class="string">'v'</span>)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    fire.Fire(baiduFanyi)</span><br></pre></td></tr></table></figure><h3 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">PS F:\code\myfire&gt; pipenv run python bdfy.py -- --help</span><br><span class="line">Type:        <span class="keyword">function</span></span><br><span class="line">String form: &lt;<span class="keyword">function</span> baiduFanyi at <span class="number">0</span>x000001A023011E18&gt;</span><br><span class="line">File:        bdfy.py</span><br><span class="line">Line:        <span class="number">15</span></span><br><span class="line">Docstring:   百度翻译单词查询</span><br><span class="line"></span><br><span class="line">Usage:       bdfy.py WORD</span><br><span class="line">             bdfy.py --word WORD</span><br><span class="line">PS F:\code\myfire&gt; pipenv run python bdfy.py python</span><br><span class="line">n. 巨蛇，大蟒;</span><br><span class="line">PS F:\code\myfire&gt; pipenv run python bdfy.py 你好</span><br><span class="line">[nǐ hǎo] hello; hi; How <span class="keyword">do</span> you <span class="keyword">do</span>!;</span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p>1、<a href="https://fanyi.baidu.com" target="_blank" rel="noopener">百度翻译</a><br>2、<a href="http://docs.python-requests.org/zh_CN/latest/user/quickstart.html" target="_blank" rel="noopener">requests中文指南</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;百度翻译是一个不错的查词翻译网站，本文介绍使用Python3爬虫实现百度翻译查词的效果，主要的依赖是&lt;code&gt;requests&lt;/code&gt;库。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://blog.crazylinux.cc/categories/Python/"/>
    
    
      <category term="Python" scheme="https://blog.crazylinux.cc/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>爬取虎扑网步行街帖子信息并写入CSV文件</title>
    <link href="https://blog.crazylinux.cc/post/2018/spider-hupubxj-csv/"/>
    <id>https://blog.crazylinux.cc/post/2018/spider-hupubxj-csv/</id>
    <published>2018-10-19T09:56:13.000Z</published>
    <updated>2019-10-28T01:30:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近在学Python网络爬虫，自己写了一些小项目，本次介绍使用requests和BeautifulSoup4库爬取虎扑网的帖子信息并写入到CSV文件。</p><a id="more"></a><p><a href="https://bbs.hupu.com/bxj" target="_blank" rel="noopener">虎扑步行街</a>的帖子很有意思，记得大学舍友经常看，遇到有意思的会和我们讲，本次爬取步行街帖子的<em>标题，URL，作者，发帖时间，回帖数，浏览数，最后回帖时间，最后回帖人</em>信息并写入到CSV文件。</p><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><ul><li>Python 3.6.4</li><li>PyCharm 2018</li><li>Windows10 x64</li></ul><h3 id="依赖："><a href="#依赖：" class="headerlink" title="依赖："></a>依赖：</h3><ul><li>requests == 2.19.1</li><li>beautifulsoup4 == 4.6.3</li><li>lxml == 4.2.4</li></ul><h3 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;</span></span><br><span class="line"><span class="comment">#   @Version: v1.0</span></span><br><span class="line"><span class="comment">#   @License: Apache Licence 2.0</span></span><br><span class="line"><span class="comment">#   @File Name: hupubxj.py</span></span><br><span class="line"><span class="comment">#   @Description: 爬取虎扑步行街的帖子信息并写入csv文件</span></span><br><span class="line"><span class="comment">#   @Author: pengshp &lt;pengshp3@outlook.com&gt;</span></span><br><span class="line"><span class="comment">#   @Date: 2018/10/19 0019</span></span><br><span class="line"><span class="comment"># &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> bs4</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHTML</span><span class="params">(link)</span>:</span></span><br><span class="line">    <span class="string">"""获取网站HTML"""</span></span><br><span class="line">    kv = &#123;<span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0'</span>&#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.get(link, headers=kv)</span><br><span class="line">        r.raise_for_status()</span><br><span class="line">        html = r.text</span><br><span class="line">    <span class="keyword">except</span> requests.HTTPError:</span><br><span class="line">        print(<span class="string">"爬取异常"</span>)</span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getData</span><span class="params">(html)</span>:</span></span><br><span class="line">    <span class="string">"""获取帖子的详细信息"""</span></span><br><span class="line">    data_list = []</span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</span><br><span class="line">    ul = soup.find_all(<span class="string">'ul'</span>, class_=<span class="string">"for-list"</span>)</span><br><span class="line">    <span class="keyword">for</span> li <span class="keyword">in</span> ul[<span class="number">0</span>].children:</span><br><span class="line">        <span class="keyword">if</span> isinstance(li, bs4.element.Tag):</span><br><span class="line">            title_box = li.select(<span class="string">'a[class="truetit"]'</span>)</span><br><span class="line">            title = title_box[<span class="number">0</span>].string</span><br><span class="line">            url = <span class="string">'https://bbs.hupu.com%s'</span> % title_box[<span class="number">0</span>][<span class="string">'href'</span>]</span><br><span class="line">            author = li.select(<span class="string">'a[class="aulink"]'</span>)[<span class="number">0</span>].string</span><br><span class="line">            time = li.select(<span class="string">'a[style="color:#808080;cursor: initial; "]'</span>)[<span class="number">0</span>].string</span><br><span class="line">            relay_view = li.select(<span class="string">'span[class="ansour box"]'</span>)[<span class="number">0</span>].string</span><br><span class="line">            relay = relay_view.split(<span class="string">'/'</span>)[<span class="number">0</span>].strip()</span><br><span class="line">            view = relay_view.split(<span class="string">'/'</span>)[<span class="number">1</span>].strip()</span><br><span class="line">            endreply = li.select(<span class="string">'div[class="endreply box"]'</span>)[<span class="number">0</span>].a.string</span><br><span class="line">            endauthor = li.select(<span class="string">'div[class="endreply box"]'</span>)[<span class="number">0</span>].span.string</span><br><span class="line">            data_list.append([title, url, author, time,</span><br><span class="line">                              relay, view, endreply, endauthor])</span><br><span class="line">    <span class="keyword">return</span> data_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    link = <span class="string">'https://bbs.hupu.com/bxj'</span></span><br><span class="line">    page = getHTML(link)</span><br><span class="line">    datas = getData(page)</span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> datas:</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">'bxj.csv'</span>, <span class="string">'a+'</span>, encoding=<span class="string">'utf-8'</span>, newline=<span class="string">''</span>) <span class="keyword">as</span> f:</span><br><span class="line">            w = csv.writer(f)</span><br><span class="line">            w.writerow(data)</span><br><span class="line">    print(<span class="string">"数据写入完成！"</span>)</span><br></pre></td></tr></table></figure><h3 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h3><p>先使用<code>requests</code>库获取网页的<code>HTML</code>，再使用<code>bs4</code>库解析网页中的数据，这里是难点，需要对照源码找到对应的标签，并提取所需的信息,把单个帖子所有的信息存为一个<code>List</code>，再把每个List加入到总的数据List中，相当于一个二维数组。写数据时一个帖子的所有信息作为一行写入<code>bxj.csv</code>.</p><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p>打开<code>bxj.csv</code>查看数据。<br><img src="/images/bxj.png" alt="bxjdata"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在学Python网络爬虫，自己写了一些小项目，本次介绍使用requests和BeautifulSoup4库爬取虎扑网的帖子信息并写入到CSV文件。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://blog.crazylinux.cc/categories/Python/"/>
    
    
      <category term="Python" scheme="https://blog.crazylinux.cc/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>LEDE/OpenWrt路由器使用Adblock屏蔽小米广告</title>
    <link href="https://blog.crazylinux.cc/post/2018/lede-adblock-admi/"/>
    <id>https://blog.crazylinux.cc/post/2018/lede-adblock-admi/</id>
    <published>2018-07-13T10:52:46.000Z</published>
    <updated>2018-07-13T11:46:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>小米的生态链产品做的不错，但无奈小米手机上的广告太多，实在无法忍受，有网友推出了<code>小米净化APP</code>用于屏蔽小米的广告，本文介绍如何在<code>LEDE/OpenWrt</code>路由器使用<code>Adblock</code>插件屏蔽小米烦人的广告。</p><a id="more"></a><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul><li>刷了<code>LEDE/OpenWrt</code>的路由器</li><li>小米手机</li><li>网络</li></ul><h3 id="1、远程登录到路由器后台"><a href="#1、远程登录到路由器后台" class="headerlink" title="1、远程登录到路由器后台"></a>1、远程登录到路由器后台</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ssh root@192.168.31.1  <span class="comment">#改为自己的IP</span></span><br><span class="line">BusyBox v1.25.1 () built-in shell (ash)</span><br><span class="line"></span><br><span class="line">     _________</span><br><span class="line">    /        /\      _    ___ ___  ___</span><br><span class="line">   /  LE    /  \    | |  | __|   \| __|</span><br><span class="line">  /    DE  /    \   | |__| _|| |) | _|</span><br><span class="line"> /________/  LE  \  |____|___|___/|___|         lede-project.org</span><br><span class="line"> \        \   DE /</span><br><span class="line">  \    LE  \    /  ----------------------------------------------</span><br><span class="line">   \  DE    \  /    Reboot (17.01.4, r3560-79f57e422d)</span><br><span class="line">    \________\/    ----------------------------------------------</span><br><span class="line"></span><br><span class="line">root@HiWiFi:~<span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="2、安装中文支持包"><a href="#2、安装中文支持包" class="headerlink" title="2、安装中文支持包"></a>2、安装中文支持包</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@HiWiFi:~<span class="comment"># opkg update</span></span><br><span class="line">root@HiWiFi:~<span class="comment"># opkg install luci-i18n-base-zh-cn</span></span><br></pre></td></tr></table></figure><h3 id="3、安装Adblock插件"><a href="#3、安装Adblock插件" class="headerlink" title="3、安装Adblock插件"></a>3、安装Adblock插件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@HiWiFi:~<span class="comment"># opkg install adblock luci-app-adblock </span></span><br><span class="line">root@HiWiFi:~<span class="comment"># opkg install luci-i18n-adblock-zh-cn</span></span><br></pre></td></tr></table></figure><h3 id="4、设置"><a href="#4、设置" class="headerlink" title="4、设置"></a>4、设置</h3><p>在<code>WebUI</code>管理界面设置<code>Adblock</code>的黑名单，加入如下的域名<br>依次点击：服务—&gt;Adblock—&gt;高级—&gt;编辑黑名单</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">a.stat.xiaomi.com</span><br><span class="line">a.union.mi.com</span><br><span class="line">abtest.mistat.xiaomi.com</span><br><span class="line">adinfo.ra1.xlmc.sec.miui.com</span><br><span class="line">adv.sec.miui.com</span><br><span class="line">api.ad.xiaomi.com</span><br><span class="line">api.ra2.xlmc.sec.miui.com</span><br><span class="line">api.tuisong.baidu.com</span><br><span class="line">api.tw06.xlmc.sec.miui.com</span><br><span class="line">app01.nodes.gslb.mi-idc.com</span><br><span class="line">app02.nodes.gslb.mi-idc.com</span><br><span class="line">app03.nodes.gslb.mi-idc.com</span><br><span class="line">applog.uc.cn</span><br><span class="line">beha.ksmobile.com</span><br><span class="line">bss.pandora.xiaomi.com</span><br><span class="line">calopenupdate.comm.miui.com</span><br><span class="line">cdn.ad.xiaomi.com</span><br><span class="line">cm.p4p.cn.yahoo.com</span><br><span class="line">cm066.getui.igexin.com</span><br><span class="line">connect.rom.miui.com</span><br><span class="line">data.mistat.xiaomi.com</span><br><span class="line">e.ad.xiaomi.com</span><br><span class="line">etl.xlmc.sandai.net</span><br><span class="line">fcanr.tracking.miui.com</span><br><span class="line">fclick.baidu.com</span><br><span class="line">get.sogou.com</span><br><span class="line">hm.xiaomi.com</span><br><span class="line">hub5pn.wap.sandai.net</span><br><span class="line">idx.m.hub.sandai.net</span><br><span class="line">image.box.xiaomi.com</span><br><span class="line">info.analysis.kp.sec.miui.com</span><br><span class="line">info.sec.miui.com</span><br><span class="line">logupdate.avlyun.sec.miui.com</span><br><span class="line">m.bss.pandora.xiaomi.com</span><br><span class="line">m.irs01.com</span><br><span class="line">m.sjzhushou.com</span><br><span class="line">master.wap.dphub.sandai.net</span><br><span class="line">mdap.alipaylog.com</span><br><span class="line">migc.g.mi.com</span><br><span class="line">migcreport.g.mi.com</span><br><span class="line">migrate.driveapi.micloud.xiaomi.net</span><br><span class="line">mis.g.mi.com</span><br><span class="line">mlog.search.xiaomi.net</span><br><span class="line">new.api.ad.xiaomi.com</span><br><span class="line">notice.game.xiaomi.com</span><br><span class="line">nsclick.baidu.com</span><br><span class="line">o2o.api.xiaomi.com</span><br><span class="line">p.alimama.com</span><br><span class="line">pdc.micloud.xiaomi.net</span><br><span class="line">ppurifier.game.xiaomi.com</span><br><span class="line">pre.api.tw06.xlmc.sandai.net</span><br><span class="line">r.browser.miui.com</span><br><span class="line">reader.browser.miui.com</span><br><span class="line">report.adview.cn</span><br><span class="line">resolver.gslb.mi-idc.com</span><br><span class="line">resolver.msg.xiaomi.net</span><br><span class="line">sa.tuisong.baidu.com</span><br><span class="line">sa3.tuisong.baidu.com</span><br><span class="line">sdk.open.phone.igexin.com</span><br><span class="line">sdk.open.talk.gepush.com</span><br><span class="line">sdk.open.talk.igexin.com</span><br><span class="line">sdkconfig.ad.xiaomi.com</span><br><span class="line">sec-cdn.static.xiaomi.net</span><br><span class="line">sec.resource.xiaomi.net</span><br><span class="line">security.browser.miui.com</span><br><span class="line">sg.a.stat.mi.com</span><br><span class="line">staging.admin.e.mi.com</span><br><span class="line">test.ad.xiaomi.com</span><br><span class="line">test.api.xlmc.sandai.net</span><br><span class="line">test.e.ad.xiaomi.com</span><br><span class="line">test.new.api.ad.xiaomi.com</span><br><span class="line">tracking.miui.com</span><br><span class="line">tw13b093.sandai.net</span><br><span class="line">union.dbba.cn</span><br><span class="line">update.avlyun.sec.miui.com</span><br><span class="line">www.adview.cn</span><br><span class="line">yun.rili.cn</span><br><span class="line">zhwnlapi.etouch.cn</span><br><span class="line">api.comm.miui.com</span><br></pre></td></tr></table></figure><p>备注：以上域名引自小米净化APP</p><h3 id="5、注意事项"><a href="#5、注意事项" class="headerlink" title="5、注意事项"></a>5、注意事项</h3><p>Adblock的配置的<code>Download Utility</code>最好选择<code>uclient-fetch</code>,并且安装SSL库</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@HiWiFi:~<span class="comment"># opkg install libustream-openssl</span></span><br></pre></td></tr></table></figure><p><img src="/images/adblocka.png" alt="ad"><br>拦截来源列表里推荐勾选上<code>reg_cn</code>，对国内的广告拦截效果较好。</p><h3 id="6、重启小米路由器"><a href="#6、重启小米路由器" class="headerlink" title="6、重启小米路由器"></a>6、重启小米路由器</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@HiWiFi:~<span class="comment"># reboot</span></span><br></pre></td></tr></table></figure><p>此时再打开小米的APP，如：<code>小米路由器</code>就发现启动时的广告没了，清爽的感觉又回来了！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;小米的生态链产品做的不错，但无奈小米手机上的广告太多，实在无法忍受，有网友推出了&lt;code&gt;小米净化APP&lt;/code&gt;用于屏蔽小米的广告，本文介绍如何在&lt;code&gt;LEDE/OpenWrt&lt;/code&gt;路由器使用&lt;code&gt;Adblock&lt;/code&gt;插件屏蔽小米烦人的广告。&lt;/p&gt;
    
    </summary>
    
    
      <category term="OpenWrt" scheme="https://blog.crazylinux.cc/categories/OpenWrt/"/>
    
    
      <category term="OpenWrt" scheme="https://blog.crazylinux.cc/tags/OpenWrt/"/>
    
  </entry>
  
  <entry>
    <title>更新CentOS7.4到CentOS7.5</title>
    <link href="https://blog.crazylinux.cc/post/2018/centos7-upgrade/"/>
    <id>https://blog.crazylinux.cc/post/2018/centos7-upgrade/</id>
    <published>2018-05-14T16:31:15.000Z</published>
    <updated>2018-05-14T17:07:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>2018年5月15日，CentOS官方发布了最新的CentOS7.5（1804）系统，加入了一些新的特性，下面介绍如何更新系统到最新的CentOS7.5。</p><a id="more"></a><h3 id="更新方法"><a href="#更新方法" class="headerlink" title="更新方法"></a>更新方法</h3><h4 id="1、查看当前的系统版本"><a href="#1、查看当前的系统版本" class="headerlink" title="1、查看当前的系统版本"></a>1、查看当前的系统版本</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/redhat-release</span><br><span class="line">CentOS Linux release 7.4.1708 (Core)</span><br></pre></td></tr></table></figure><h4 id="2、更新系统"><a href="#2、更新系统" class="headerlink" title="2、更新系统"></a>2、更新系统</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum clean all</span><br><span class="line">$ sudo yum upgrade</span><br><span class="line">$ sudo systemctl reboot</span><br></pre></td></tr></table></figure><h4 id="3、查看新的系统版本"><a href="#3、查看新的系统版本" class="headerlink" title="3、查看新的系统版本"></a>3、查看新的系统版本</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/redhat-release</span><br><span class="line">CentOS Linux release 7.5.1804 (Core)</span><br></pre></td></tr></table></figure><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p>1、<a href="https://blog.centos.org/2018/05/centos-7-5-1804-released/" target="_blank" rel="noopener">官方博客</a><br>2、<a href="https://opsx.alibaba.com/mirror" target="_blank" rel="noopener">下载地址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2018年5月15日，CentOS官方发布了最新的CentOS7.5（1804）系统，加入了一些新的特性，下面介绍如何更新系统到最新的CentOS7.5。&lt;/p&gt;
    
    </summary>
    
    
      <category term="CentOS" scheme="https://blog.crazylinux.cc/categories/CentOS/"/>
    
    
      <category term="CentOS" scheme="https://blog.crazylinux.cc/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>树莓派配置 dnscrypt-proxy</title>
    <link href="https://blog.crazylinux.cc/post/2018/rpi-dnscrypt-proxy/"/>
    <id>https://blog.crazylinux.cc/post/2018/rpi-dnscrypt-proxy/</id>
    <published>2018-02-18T14:49:58.000Z</published>
    <updated>2019-04-17T16:35:42.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/dnscrypt.png" alt="dnscrypt"><br><code>dnscrypt-proxy</code>可防止DNS污染，最新的2.0版本增加缓存DNS功能，加快DNS解析速度。</p><a id="more"></a><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> wget https://github.com/jedisct1/dnscrypt-proxy/releases/download/2.0.16/dnscrypt-proxy-linux_arm-2.0.16.tar.gz</span></span><br></pre></td></tr></table></figure><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> tar -zxf dnscrypt-proxy-linux_arm-2.0.16.tar.gz -C /usr/<span class="built_in">local</span>/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mv linux-arm dnscrypt</span></span><br></pre></td></tr></table></figure><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ mv example-dnscrypt-proxy.toml dnscrypt-proxy.toml</span><br><span class="line">$ vim dnscrypt-proxy.toml</span><br><span class="line">server_names = [<span class="string">'geekdns-doh-east'</span>, <span class="string">'rubyfish-ea'</span>, <span class="string">'gridns-sg'</span>, <span class="string">'cloudflare'</span>]</span><br><span class="line">listen_addresses = [<span class="string">'127.0.0.1:53'</span>, <span class="string">'[172.16.10.10]:53'</span>]</span><br><span class="line">log_file = <span class="string">'dnscrypt-proxy.log'</span></span><br><span class="line">fallback_resolver = <span class="string">'208.67.222.222:53'</span></span><br><span class="line">cache = <span class="literal">true</span></span><br><span class="line">cache_size = 15000</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>把上面的<code>172.16.10.10</code>改为树莓派局域网内的IP地址。<code>server_names</code>会自动选择一个最快的使用，我的测试了<code>gridns-sg</code>[新加坡服务器]延迟较低。<code>极客DNS</code>和<code>红鱼DNS</code>是中国大陆的服务器，其它一些高级的功能可根据自己的需要更改。</p><p>eg.</p><ul><li>自定义域名解析</li><li>域名黑名单</li><li>过滤广告</li></ul><h3 id="安装服务"><a href="#安装服务" class="headerlink" title="安装服务"></a>安装服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo /usr/<span class="built_in">local</span>/dnscrypt/dnscrypt-proxy -service install</span></span><br></pre></td></tr></table></figure><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo dnscrypt-proxy -service start</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  使用systemctl管理服务</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl start dnscrypt-proxy.service</span></span><br></pre></td></tr></table></figure><h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo dnscrypt-proxy -service stop</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo dnscrypt-proxy -service restart</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo dnscrypt-proxy -service uninstall</span></span><br></pre></td></tr></table></figure><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>网络配置里修改DNS配置为树莓派的IP地址。便可以使用本地的DNS解析。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://github.com/jedisct1/dnscrypt-proxy/wiki" target="_blank" rel="noopener">dnscrypt wiki</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/dnscrypt.png&quot; alt=&quot;dnscrypt&quot;&gt;&lt;br&gt;&lt;code&gt;dnscrypt-proxy&lt;/code&gt;可防止DNS污染，最新的2.0版本增加缓存DNS功能，加快DNS解析速度。&lt;/p&gt;
    
    </summary>
    
    
      <category term="RaspberryPi" scheme="https://blog.crazylinux.cc/categories/RaspberryPi/"/>
    
    
      <category term="RaspberryPi" scheme="https://blog.crazylinux.cc/tags/RaspberryPi/"/>
    
  </entry>
  
  <entry>
    <title>HAProxy实现负载均衡</title>
    <link href="https://blog.crazylinux.cc/post/2018/haproxy-load-balancing/"/>
    <id>https://blog.crazylinux.cc/post/2018/haproxy-load-balancing/</id>
    <published>2018-02-01T06:07:27.000Z</published>
    <updated>2018-07-13T11:39:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>当随着访问量的增加时，原来的单台服务器难以承受大量的访问时，就需要使用负载均衡来分担服务器的压力。本文介绍使用<code>HAProxy</code>实现一个免费、高效、可靠的高可用负载均衡解决方案。</p><a id="more"></a><h3 id="HAProxy简介"><a href="#HAProxy简介" class="headerlink" title="HAProxy简介"></a>HAProxy简介</h3><p>HAProxy是免费、高效、可靠的高可用负载均衡解决方案。适合处理高负载站点的七层数据请求，对外可屏蔽内部的真实Web服务器，防止内部服务器遭受外部攻击。</p><h3 id="HAProxy解决方案"><a href="#HAProxy解决方案" class="headerlink" title="HAProxy解决方案"></a>HAProxy解决方案</h3><ul><li>客户端IP：将客户端IP进行Hash计算并保存，当相同的IP访问代理服务器时可以转发至相同的后端服务器；</li><li>Cookie：依靠真实服务器发送给客户端的Cookie信息进行会话保持；</li><li>Session：保存真实服务器的Session及服务标识，实现会话保持功能；</li></ul><h3 id="实验拓扑图"><a href="#实验拓扑图" class="headerlink" title="实验拓扑图"></a>实验拓扑图</h3><p><img src="http://7xseex.com1.z0.glb.clouddn.com/2018020116540haproxy.png" alt="2018020116540haproxy.png"></p><h3 id="实验配置"><a href="#实验配置" class="headerlink" title="实验配置"></a>实验配置</h3><h4 id="HAProxy配置"><a href="#HAProxy配置" class="headerlink" title="HAProxy配置"></a>HAProxy配置</h4><p>1、安装HAProxy</p><pre><code>$ yum install -y haproxy</code></pre><p>2、修改配置文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ [root@CentOS7] ~$ vim /etc/haproxy/haproxy.cfg</span><br><span class="line">global</span><br><span class="line">    <span class="built_in">log</span>         127.0.0.1 local2</span><br><span class="line"></span><br><span class="line">    chroot      /var/lib/haproxy</span><br><span class="line">    pidfile     /var/run/haproxy.pid</span><br><span class="line">    maxconn     4000</span><br><span class="line">    user        haproxy</span><br><span class="line">    group       haproxy</span><br><span class="line">    daemon</span><br><span class="line"></span><br><span class="line">    <span class="comment"># turn on stats unix socket</span></span><br><span class="line">    stats socket /var/lib/haproxy/stats</span><br><span class="line"></span><br><span class="line">frontend haproxy_inbound</span><br><span class="line">    <span class="built_in">bind</span> *:80</span><br><span class="line">    default_backend haproxy_httpd</span><br><span class="line"></span><br><span class="line">backend haproxy_httpd</span><br><span class="line">    balance     roundrobin</span><br><span class="line">    option httpchk GET /index.html  <span class="comment"># 健康检查</span></span><br><span class="line">    server web1 192.168.10.129:80 check</span><br><span class="line">    server web2 192.168.10.130:80 check</span><br></pre></td></tr></table></figure><p>3、内核优化</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/security/limits.conf</span><br><span class="line">*               soft    nofile        65535</span><br><span class="line">*               hard    nofile        65535</span><br></pre></td></tr></table></figure><p>4、开启日志服务</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改日志配置文件</span></span><br><span class="line">$ vim /etc/rsyslog.conf</span><br><span class="line"><span class="variable">$ModLoad</span> imudp</span><br><span class="line"><span class="variable">$UDPServerRun</span> 514</span><br><span class="line">local3.*                           /var/<span class="built_in">log</span>/haproxy.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启日志服务</span></span><br><span class="line">$ systemctl restart syslog</span><br></pre></td></tr></table></figure><p>5、开启HAProxy</p><pre><code>$ haproxy -f /etc/haproxy/haproxy.cfg</code></pre><h4 id="后端Web服务器配置"><a href="#后端Web服务器配置" class="headerlink" title="后端Web服务器配置"></a>后端Web服务器配置</h4><p>后端服务器配置基本相同，为了验证试验效果，后端网页不同<br>1、配置网卡</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/sysconfig/network-scripts/ifcfg-ens33554984</span><br><span class="line">NAME=ens33554984</span><br><span class="line">BOOTPROTO=<span class="string">'static'</span></span><br><span class="line">ONBOOT=<span class="string">"yes"</span></span><br><span class="line">IPADDR=192.168.10.129</span><br><span class="line">GATEWAY=192.168.10.128  <span class="comment">#网关指向HAProxy的内网IP</span></span><br><span class="line">TYPE=<span class="string">"Ethernet"</span></span><br><span class="line"></span><br><span class="line">$ systemctl restart network</span><br></pre></td></tr></table></figure><p>2、Apache配置<br>网页文件做修改，其他配置相同</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS7] ~$ yum install -y httpd</span><br><span class="line"></span><br><span class="line"><span class="comment"># Web-1</span></span><br><span class="line">[root@CentOS7] ~$ <span class="built_in">echo</span> <span class="string">"This is Web-1"</span> &gt; /var/www/html/index.html</span><br><span class="line"></span><br><span class="line"><span class="comment"># Web-2</span></span><br><span class="line">[root@CentOS7] ~$ <span class="built_in">echo</span> <span class="string">"This is Web-2"</span> &gt; /var/www/html/index.html</span><br><span class="line"></span><br><span class="line">[root@CentOS7] ~$ systemctl start httpd</span><br><span class="line">[root@CentOS7] ~$ systemctl <span class="built_in">enable</span> httpd</span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>重启HAProxy</p><pre><code>$ systemctl restart haproxy.service   </code></pre><p>浏览器打开 <a href="http://192.168.10.128" target="_blank" rel="noopener">http://192.168.10.128</a>,刷新网页，便可以看到在<code>Web-1</code>和<code>Web-2</code>之间轮询。实现一个负载均衡。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;当随着访问量的增加时，原来的单台服务器难以承受大量的访问时，就需要使用负载均衡来分担服务器的压力。本文介绍使用&lt;code&gt;HAProxy&lt;/code&gt;实现一个免费、高效、可靠的高可用负载均衡解决方案。&lt;/p&gt;
    
    </summary>
    
    
      <category term="CentOS" scheme="https://blog.crazylinux.cc/categories/CentOS/"/>
    
    
      <category term="CentOS" scheme="https://blog.crazylinux.cc/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>Web 缓存代理服务器polipo</title>
    <link href="https://blog.crazylinux.cc/post/2018/web-cache-proxy-polipo/"/>
    <id>https://blog.crazylinux.cc/post/2018/web-cache-proxy-polipo/</id>
    <published>2018-01-31T15:21:20.000Z</published>
    <updated>2018-09-13T16:51:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>Polipo 是一个小而快速的缓存web 代理程序(web 缓存, HTTP 代理, 代理服务器)。可以实现HTTP和SOCKS代理。为了最小化延迟，Polipo管线化多个资源请求，在同一个TCP/IP连接上多路复用。Polipo具有HTTP 1.1兼容，支持IPv4、IPv6，流量过滤和隐私增强。</p><a id="more"></a><p>测试环境：CentOS7</p><h3 id="下载编译安装"><a href="#下载编译安装" class="headerlink" title="下载编译安装"></a>下载编译安装</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载源码</span></span><br><span class="line">$ wget https://github.com/jech/polipo/archive/polipo-1.1.1.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">$ tar -zxf polipo-1.1.1.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">$ yum install texinfo gcc make</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">$ <span class="built_in">cd</span> polipo-polipo-1.1.1/</span><br><span class="line">$ make all</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">$ su -c <span class="string">'make install'</span></span><br></pre></td></tr></table></figure><h3 id="创建相关的配置文件"><a href="#创建相关的配置文件" class="headerlink" title="创建相关的配置文件"></a>创建相关的配置文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建日志文件</span></span><br><span class="line">$ mkdir /var/<span class="built_in">log</span>/polipo</span><br><span class="line">$ touch /var/<span class="built_in">log</span>/polipo/polipo.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建配置目录</span></span><br><span class="line">$ mkdir /etc/polipo</span><br></pre></td></tr></table></figure><h3 id="新建服务启动文件"><a href="#新建服务启动文件" class="headerlink" title="新建服务启动文件"></a>新建服务启动文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ vim /usr/lib/systemd/system/polipo.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=polipo web proxy</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">WorkingDirectory=/tmp</span><br><span class="line">User=root</span><br><span class="line">Group=root</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/polipo -c /etc/polipo/config</span><br><span class="line">Restart=always</span><br><span class="line">SyslogIdentifier=Polipo</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h3 id="创建服务配置文件"><a href="#创建服务配置文件" class="headerlink" title="创建服务配置文件"></a>创建服务配置文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/polipo/config</span><br><span class="line">logSyslog = <span class="literal">true</span></span><br><span class="line">socksParentProxy = <span class="string">"localhost:1080"</span> <span class="comment">#上层Socks5代理</span></span><br><span class="line">socksProxyType = socks5</span><br><span class="line">logFile = /var/<span class="built_in">log</span>/polipo/polipo.log</span><br><span class="line">logLevel = 4</span><br><span class="line">proxyAddress = <span class="string">"0.0.0.0"</span> <span class="comment">#监听IP</span></span><br><span class="line">proxyPort = 8123</span><br><span class="line">allowedClients = 192.168.10.0/24 <span class="comment">#允许连接的客户端</span></span><br><span class="line">chunkHighMark = 50331648 <span class="comment">#使用的较多的内存</span></span><br><span class="line">objectHighMark = 16384</span><br><span class="line">diskCacheRoot = <span class="string">"/var/cache/polipo"</span> <span class="comment">#缓存文件存储目录</span></span><br><span class="line">cacheIsShared = <span class="literal">true</span> <span class="comment">#分享缓存</span></span><br><span class="line">serverMaxSlots = 64</span><br><span class="line">serverSlots = 16</span><br><span class="line">serverSlots1 = 32</span><br><span class="line">dnsQueryIPv6 = no <span class="comment">#不适用IPv6，加快DNS查询速度</span></span><br><span class="line">dnsUseGethostbyname = yes <span class="comment">#使用系统的resolver</span></span><br></pre></td></tr></table></figure><h3 id="启动代理服务"><a href="#启动代理服务" class="headerlink" title="启动代理服务"></a>启动代理服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> systemctl start polipo.service</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl <span class="built_in">enable</span> polipo.service</span></span><br></pre></td></tr></table></figure><h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><p>把浏览器的代理配置为<code>polipo</code>服务器的IP地址，端口为8123，便可以使用<code>polipo</code>代理上网，加快网页的访问速度。</p><h3 id="说明："><a href="#说明：" class="headerlink" title="说明："></a>说明：</h3><p>如果实在树莓派上使用，可直接使用apt安装，并复制配置文件直接修改配置,可直接使用<code>systemctl</code>管理服务。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cp /usr/share/doc/polipo/examples/config.sample /etc/polipo/config</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Polipo 是一个小而快速的缓存web 代理程序(web 缓存, HTTP 代理, 代理服务器)。可以实现HTTP和SOCKS代理。为了最小化延迟，Polipo管线化多个资源请求，在同一个TCP/IP连接上多路复用。Polipo具有HTTP 1.1兼容，支持IPv4、IPv6，流量过滤和隐私增强。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://blog.crazylinux.cc/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://blog.crazylinux.cc/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>内网穿透服务Frp</title>
    <link href="https://blog.crazylinux.cc/post/2018/intranet-penetration-frp/"/>
    <id>https://blog.crazylinux.cc/post/2018/intranet-penetration-frp/</id>
    <published>2018-01-31T06:31:40.000Z</published>
    <updated>2018-10-26T09:06:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>frp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp, http, https 协议。当想从公网环境访问家里或公司局域网内的服务器时便可以使用frp搭建内网穿透服务实现此功能。</p><a id="more"></a><h3 id="1、原理介绍"><a href="#1、原理介绍" class="headerlink" title="1、原理介绍"></a>1、原理介绍</h3><p>Frp是<code>C/S</code>架构，在具有公网IP的服务器上搭建Frp的服务端，在本地局域网搭建Frp客户端；Frp通过将局域网内的IP端口映射到公网IP的某个端口上，当我们访问公网IP的这个端口时，相当于访问了其映射的局域网内的 IP:Port </p><h3 id="2、服务条件"><a href="#2、服务条件" class="headerlink" title="2、服务条件"></a>2、服务条件</h3><ul><li>具有公网IP的服务器</li><li>客户端和服务端使用相同或相近的版本</li></ul><h3 id="3、服务端搭建"><a href="#3、服务端搭建" class="headerlink" title="3、服务端搭建"></a>3、服务端搭建</h3><p>下载对应系统的最新的程序<a href="https://github.com/fatedier/frp/releases" target="_blank" rel="noopener">frp</a> 解压缩，进入解压目录<br>修改配置文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ vim frps.ini</span><br><span class="line">[common]</span><br><span class="line">bind_port = 7000</span><br><span class="line">bind_udp_port = 7001</span><br><span class="line">kcp_bind_port = 7000</span><br><span class="line"></span><br><span class="line">dashboard_port = 7500</span><br><span class="line"><span class="comment"># dashboard 用户名密码，默认都为 admin</span></span><br><span class="line">dashboard_user = admin</span><br><span class="line">dashboard_pwd = admin</span><br><span class="line">vhost_http_port = 80</span><br><span class="line"></span><br><span class="line">token = xxxx <span class="comment">#自定义</span></span><br><span class="line">max_pool_count = 5</span><br><span class="line">max_ports_per_client = 0 </span><br><span class="line">authentication_timeout = 900</span><br><span class="line">subdomain_host = xxxxx.com</span><br><span class="line">tcp_mux = <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>启动Frp服务端</p><pre><code>$ nohup ./frps -c ./frps.ini &amp;</code></pre><h3 id="4、客户端搭建"><a href="#4、客户端搭建" class="headerlink" title="4、客户端搭建"></a>4、客户端搭建</h3><p>下载相同的程序<br>修改配置文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">$ vim frpc.ini</span><br><span class="line">[common]</span><br><span class="line">server_addr = x.x.x.x   <span class="comment">#公网IP地址</span></span><br><span class="line">server_port = 7000</span><br><span class="line"></span><br><span class="line">log_file = /usr/<span class="built_in">local</span>/frp/frpc.log</span><br><span class="line"><span class="comment"># trace, debug, info, warn, error</span></span><br><span class="line">log_level = info</span><br><span class="line">log_max_days = 3</span><br><span class="line"></span><br><span class="line">token = xxxxxx <span class="comment">#修改</span></span><br><span class="line">pool_count = 5</span><br><span class="line">tcp_mux = <span class="literal">true</span></span><br><span class="line">user = pi</span><br><span class="line">login_fail_exit = <span class="literal">true</span></span><br><span class="line">protocol = tcp</span><br><span class="line"></span><br><span class="line">[ssh]</span><br><span class="line"><span class="built_in">type</span> = tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 22</span><br><span class="line">remote_port = 6000</span><br><span class="line"></span><br><span class="line">[gogs]</span><br><span class="line"><span class="built_in">type</span> = http</span><br><span class="line">local_ip = 172.16.10.80</span><br><span class="line">local_port = 3000</span><br><span class="line">use_encryption = <span class="literal">true</span></span><br><span class="line">use_compression = <span class="literal">false</span></span><br><span class="line">subdomain = gogs</span><br><span class="line"><span class="comment">#custom_domains = gogs.xxxx.com</span></span><br></pre></td></tr></table></figure><p>启动本地客户端</p><pre><code>$ nohup ./frpc -c ./frpc.ini &amp;</code></pre><p>ssh连接局域网内的服务器</p><pre><code>$ ssh -oPort=6000 root@x.x.x.x</code></pre><p>也可在局域网搭建能够被公网访问的Web服务器，开启80或443端口，更多高级的配置请参考下面的文档。</p><h3 id="5-systemctl管理frpc服务"><a href="#5-systemctl管理frpc服务" class="headerlink" title="5.systemctl管理frpc服务"></a>5.systemctl管理frpc服务</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ vim /lib/systemd/system/frpc.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=frpc daemon</span><br><span class="line">After=network.target syslog.target</span><br><span class="line">Wants=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">Restart=always</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/frp/frpc -c /usr/<span class="built_in">local</span>/frp/frpc.ini</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>服务端同理，把<code>frpc</code>改为<code>frps</code></p><h3 id="5、参考文档"><a href="#5、参考文档" class="headerlink" title="5、参考文档"></a>5、参考文档</h3><p>1、<a href="https://github.com/fatedier/frp/blob/master/README_zh.md" target="_blank" rel="noopener">Frp说明文档</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;frp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp, http, https 协议。当想从公网环境访问家里或公司局域网内的服务器时便可以使用frp搭建内网穿透服务实现此功能。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://blog.crazylinux.cc/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://blog.crazylinux.cc/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 时间同步</title>
    <link href="https://blog.crazylinux.cc/post/2018/centos-ntpdate/"/>
    <id>https://blog.crazylinux.cc/post/2018/centos-ntpdate/</id>
    <published>2018-01-31T05:49:41.000Z</published>
    <updated>2018-01-31T06:03:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>Linux中很多服务需要进行时间同步，不然容易导致出错。本文介绍使用阿里云的时间服务器同步服务器的时间。</p><a id="more"></a><h3 id="1、安装软件"><a href="#1、安装软件" class="headerlink" title="1、安装软件"></a>1、安装软件</h3><pre><code>$ yum install -y ntpdate</code></pre><h3 id="2、时间同步服务器"><a href="#2、时间同步服务器" class="headerlink" title="2、时间同步服务器"></a>2、时间同步服务器</h3><p>可用的时间同步服务器，阿里提供了一些NTP时间服务器可以用于从互联网中同步服务器的时间；</p><blockquote><p>ntp1.aliyun.com<br>  ntp2.aliyun.com<br>  ntp3.aliyun.com<br>  ntp4.aliyun.com<br>  ntp5.aliyun.com<br>  ntp6.aliyun.com<br>  ntp7.aliyun.com</p></blockquote><h3 id="3、同步时间"><a href="#3、同步时间" class="headerlink" title="3、同步时间"></a>3、同步时间</h3><p>从上面的时间同步服务器中选择一个进行时间同步。</p><pre><code>$ ntpdate -u ntp1.aliyun.com</code></pre><h3 id="4、加入计划任务"><a href="#4、加入计划任务" class="headerlink" title="4、加入计划任务"></a>4、加入计划任务</h3><p>可以把时间同步加入系统的计划任务，定时从互联网同步时间</p><pre><code>$ crontab -e* */2 * * * ntpdate -u ntp1.aliyun.com &amp;&gt; /dev/null# 每两个小时同步一次时间$ systemctl start crond$ systemctl enable crond</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Linux中很多服务需要进行时间同步，不然容易导致出错。本文介绍使用阿里云的时间服务器同步服务器的时间。&lt;/p&gt;
    
    </summary>
    
    
      <category term="CentOS" scheme="https://blog.crazylinux.cc/categories/CentOS/"/>
    
    
      <category term="CentOS" scheme="https://blog.crazylinux.cc/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>Pipenv 使用指南</title>
    <link href="https://blog.crazylinux.cc/post/2018/pipenv-guide/"/>
    <id>https://blog.crazylinux.cc/post/2018/pipenv-guide/</id>
    <published>2018-01-04T02:42:55.000Z</published>
    <updated>2018-01-04T03:04:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>pipenv是requests作者的一个项目, 整合了virtualenv, pip的优点，用于更方便地为项目建立虚拟环境并管理虚拟环境中的第三方模块。后来这个项目交给Python基金会维护。</p><a id="more"></a><p>为什么要使用Pipenv？：</p><ul><li>自动关联项目相关的 virtualenv，能够快速的加载 virtualenv。</li><li>提供的 pipenv替代 pip并自带一个依赖清单 Pipfile，和依赖锁定 Pipfile.lock。</li><li>其中 Pipfile除了依赖清单还支持固定 pypi源地址,固定 python版本。</li><li>Pipfile还支持 dev依赖清单. pipenv install的包会强制使用 Pipfile中的源.</li><li>解决了 pip install pandas时里的 numpy依旧走官方 pypi.<br>还有就是可以直接切换 python2,3</li><li>使用 pipenv graph命令可以看到依赖树</li></ul><h4 id="1、安装Pipenv"><a href="#1、安装Pipenv" class="headerlink" title="1、安装Pipenv"></a>1、安装Pipenv</h4><pre><code>pip3 install pipenv</code></pre><h4 id="2、创建虚拟环境"><a href="#2、创建虚拟环境" class="headerlink" title="2、创建虚拟环境"></a>2、创建虚拟环境</h4><p>pipenv管理虚拟环境是按项目来的, 要为你的某个项目新建一个虚拟环境, 只需要在项目目录下运行如下命令:</p><pre><code># 新建Python2 的虚拟环境pipenv --two# 新建Python3 的虚拟环境pipenv --three# 更换豆瓣的pipy源sed -i s/pypi.python.org/pypi.doubanio.com/g Pipfile</code></pre><p>该命令会在项目目录下生成一个<code>Pipfile</code>的文件，用于记录虚拟环境的信息及第三方依赖的信息。</p><h4 id="3、安装第三方模块"><a href="#3、安装第三方模块" class="headerlink" title="3、安装第三方模块"></a>3、安装第三方模块</h4><p>pipenv可以自动安装你项目的第三方模块 :</p><pre><code>pipenv install</code></pre><p>安装列表是通过读取<code>pipfile</code>, <code>pipfile.lock</code>文件实现的, 如果没有这两个文件就根据<code>requirements.txt</code>生成<code>pipfile</code>和<code>pipfile.lock</code>并读取.<br>如果想单独安装某个模块还可以指定模块名安装:</p><pre><code>pipenv install sanic</code></pre><p>单独安装模块后会自动将新模块信息添加到pipfile中, 要同时更新pipfile.lock需要运行:</p><pre><code>pipenv lock</code></pre><h4 id="4、进入虚拟环境"><a href="#4、进入虚拟环境" class="headerlink" title="4、进入虚拟环境"></a>4、进入虚拟环境</h4><pre><code># 进入虚拟环境pipenv shell# 退出exit</code></pre><p>还有一个 <code>pipenv run</code>的可以直接执行 <code>virtualenv</code>环境下的命令。</p><h4 id="5、基本命令"><a href="#5、基本命令" class="headerlink" title="5、基本命令"></a>5、基本命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Usage: pipenv [OPTIONS] COMMAND [ARGS]...</span><br><span class="line">Options:</span><br><span class="line">  --update         升级 pipenv, pip 到最新.</span><br><span class="line">  --where          输出项目的目录信息.</span><br><span class="line">  --venv           输出 virtualenv 的目录信息.</span><br><span class="line">  --py             输出 Python 解析器的路径.</span><br><span class="line">  --envs           输出环境变量的设置.</span><br><span class="line">  --rm             删除当前 virtualenv.</span><br><span class="line">  --bare           Minimal output.</span><br><span class="line">  --completion     Output completion (to be evald).</span><br><span class="line">  --man            显示使用手册.</span><br><span class="line">  --three / --two  使用 Python 3/2 来创建 virtualenv</span><br><span class="line">  --python TEXT    直接指定 Python 解析器.</span><br><span class="line">  --site-packages  拷贝系统 site-packages 到 virtualenv.</span><br><span class="line">  --jumbotron      An easter egg, effectively.</span><br><span class="line">  --version        显示版本信息并退出.</span><br><span class="line">  -h, --help       显示当前信息并退出.</span><br><span class="line">Commands:</span><br><span class="line">  check      检查安全漏洞和反对 PEP 508 标记在Pipfile提供.</span><br><span class="line">  graph      显示当前依赖关系图信息.</span><br><span class="line">  install    安装提供的包，并加入 Pipfile 的依赖清单中</span><br><span class="line">  lock       生成 Pipfile.lock.</span><br><span class="line">  open       在编辑器(vim)查看一个特定模块.</span><br><span class="line">  run        在 virtualenv 中执行命令.</span><br><span class="line">  shell      切换到 virtualenv 中.</span><br><span class="line">  uninstall  删除提供的包，并清理 Pipfile 的依赖清单中.</span><br><span class="line">  update     卸载当前所以依赖，然后安装最新包</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;pipenv是requests作者的一个项目, 整合了virtualenv, pip的优点，用于更方便地为项目建立虚拟环境并管理虚拟环境中的第三方模块。后来这个项目交给Python基金会维护。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://blog.crazylinux.cc/categories/Python/"/>
    
    
      <category term="Python" scheme="https://blog.crazylinux.cc/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python 的 IP 地址处理模块 IPy</title>
    <link href="https://blog.crazylinux.cc/post/2017/python3-ipy/"/>
    <id>https://blog.crazylinux.cc/post/2017/python3-ipy/</id>
    <published>2017-12-29T01:18:32.000Z</published>
    <updated>2018-01-04T03:05:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>IP 地址规划是网络设计中很重要的一个环节，在此过程中，免不了要计算大量的IP 地址，包括网段、子网掩码、广播地址、子网数、IP类型等。Python 提供了一个强大的第三方模块<code>IPy</code>,可以辅助我们高效的完成 IP 的规划工作。</p><a id="more"></a><h4 id="1、安装-IPy-模块"><a href="#1、安装-IPy-模块" class="headerlink" title="1、安装 IPy 模块"></a>1、安装 IPy 模块</h4><pre><code>pip3 install ipy</code></pre><h4 id="2、IP-地址、网段的基本数理"><a href="#2、IP-地址、网段的基本数理" class="headerlink" title="2、IP 地址、网段的基本数理"></a>2、IP 地址、网段的基本数理</h4><p>IPy 模块包含一个<code>IP</code>类,可以方便的处理绝大部分格式为 <code>IPv4</code> 和 <code>IPv6</code> 格式的网络和地址。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> IPy <span class="keyword">import</span> IP</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>IP(<span class="string">'10.0.0.0/8'</span>).version()</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>IP(<span class="string">'::1'</span>).version()</span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure><p>通过指定的网段输出该网段的IP个数及所有的IP地址清单</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">from</span> IPy <span class="keyword">import</span> IP</span><br><span class="line">ip=IP(<span class="string">'192.168.22.0/24'</span>)</span><br><span class="line">print(ip.len())</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> ip:</span><br><span class="line">    print(x)</span><br></pre></td></tr></table></figure><p>反向地址解析,IP类型，IP转换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> IPy <span class="keyword">import</span> IP</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ip = IP(<span class="string">'192.168.22.167'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ip.reverseNames()      <span class="comment">#反向解析</span></span><br><span class="line">[<span class="string">'167.22.168.192.in-addr.arpa.'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ip.iptype()</span><br><span class="line"><span class="string">'PRIVATE'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>IP(<span class="string">'8.8.8.8'</span>).iptype() <span class="comment">#8.8.8.8位公网</span></span><br><span class="line"><span class="string">'PUBLIC'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>IP(<span class="string">'8.8.8.8'</span>).int()    <span class="comment">#转为整型格式</span></span><br><span class="line"><span class="number">134744072</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>IP(<span class="string">'8.8.8.8'</span>).strHex() <span class="comment">#转为十六进制</span></span><br><span class="line"><span class="string">'0x8080808'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>IP(<span class="string">'8.8.8.8'</span>).strBin() <span class="comment">#转为二进制</span></span><br><span class="line"><span class="string">'00001000000010000000100000001000'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(IP(<span class="number">0x8080808</span>))</span><br><span class="line"><span class="number">8.8</span><span class="number">.8</span><span class="number">.8</span></span><br></pre></td></tr></table></figure><p>IP 方法也支持网络地址的转换，如IP和掩码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> IPy <span class="keyword">import</span> IP</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ip=IP(<span class="string">'192.168.22.0/255.255.255.0'</span>,make_net=<span class="literal">True</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(ip)</span><br><span class="line"><span class="number">192.168</span><span class="number">.22</span><span class="number">.0</span>/<span class="number">24</span></span><br></pre></td></tr></table></figure><p>通过strNormal方法指定不同参数值以定制不同输出类型的网段，输出类型为字符串。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>IP(<span class="string">'192.168.22.0/24'</span>).strNormal(<span class="number">0</span>)</span><br><span class="line"><span class="string">'192.168.22.0'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>IP(<span class="string">'192.168.22.0/24'</span>).strNormal(<span class="number">1</span>)</span><br><span class="line"><span class="string">'192.168.22.0/24'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>IP(<span class="string">'192.168.22.0/24'</span>).strNormal(<span class="number">2</span>)</span><br><span class="line"><span class="string">'192.168.22.0/255.255.255.0'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>IP(<span class="string">'192.168.22.0/24'</span>).strNormal(<span class="number">3</span>)</span><br><span class="line"><span class="string">'192.168.22.0-192.168.22.255'</span></span><br></pre></td></tr></table></figure><h4 id="3、多网络计算方法"><a href="#3、多网络计算方法" class="headerlink" title="3、多网络计算方法"></a>3、多网络计算方法</h4><p>判断IP地址和网段是否包含于同一网段中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'192.168.22.100'</span> <span class="keyword">in</span> IP(<span class="string">'192.168.22.0/24'</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>IP(<span class="string">'192.168.22.0/24'</span>) <span class="keyword">in</span> IP(<span class="string">'192.168.0.0/16'</span>)</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><p>判断两个网段是否存在重叠，采用IPy 提供的 <code>overlaps</code> 方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>IP(<span class="string">'192.168.0.0/23'</span>).overlaps(<span class="string">'192.168.1.0/24'</span>)</span><br><span class="line"><span class="number">1</span>   <span class="comment">#返回1代表存在重叠</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>IP(<span class="string">'192.168.0.0/23'</span>).overlaps(<span class="string">'192.168.22.0/24'</span>)</span><br><span class="line"><span class="number">0</span>   <span class="comment">#返回0代表不存在重叠</span></span><br></pre></td></tr></table></figure><h4 id="4、综合应用"><a href="#4、综合应用" class="headerlink" title="4、综合应用"></a>4、综合应用</h4><p>一个自动识别IP地址、子网、方向解析、IP类型的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> IPy <span class="keyword">import</span> IP</span><br><span class="line">ip_s = input(‘请输入IP地址或者网段地址: ‘)</span><br><span class="line">ips = IP(ip_s)   <span class="comment">#定义元素</span></span><br><span class="line"><span class="keyword">if</span> len(ips) &gt; <span class="number">1</span>:  <span class="comment">#如果len出来的数字大于1，那么就是一个网段</span></span><br><span class="line">print(‘网络地址: %s’ % ips.net())</span><br><span class="line">print(‘子网掩码: %s’ % ips.netmask())</span><br><span class="line">print(‘网络广播地址: %s’ % ips.reverseNames() [<span class="number">0</span>])</span><br><span class="line">print(‘网络子网数: %s’ % len(ips))</span><br><span class="line"><span class="keyword">else</span>:   <span class="comment">###否则就是一个地址</span></span><br><span class="line">print(‘IP反向解析: %s’ % ips.reverseNames() [<span class="number">0</span>])</span><br><span class="line">print(‘十六进制地址: %s’ % ips.strHex())</span><br><span class="line">print(‘二进制地址: %s’ % ips.strBin())</span><br><span class="line">print(‘地址类型: %s’ % ips.iptype())</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;IP 地址规划是网络设计中很重要的一个环节，在此过程中，免不了要计算大量的IP 地址，包括网段、子网掩码、广播地址、子网数、IP类型等。Python 提供了一个强大的第三方模块&lt;code&gt;IPy&lt;/code&gt;,可以辅助我们高效的完成 IP 的规划工作。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://blog.crazylinux.cc/categories/Python/"/>
    
    
      <category term="Python" scheme="https://blog.crazylinux.cc/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python 发送电子邮件</title>
    <link href="https://blog.crazylinux.cc/post/2017/python-send-mail/"/>
    <id>https://blog.crazylinux.cc/post/2017/python-send-mail/</id>
    <published>2017-12-26T07:13:42.000Z</published>
    <updated>2018-01-04T03:05:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>Email的历史比Web还要久远，直到现在，Email也是互联网上应用非常广泛的服务。本文介绍邮件的传递过程及使用Python实现邮件的发送。</p><a id="more"></a><h2 id="一、基本概念"><a href="#一、基本概念" class="headerlink" title="一、基本概念"></a>一、基本概念</h2><p>假设我们自己的电子邮件地址是<a href="mailto:me@163.com">me@163.com</a>，对方的电子邮件地址是<a href="mailto:friend@sina.com">friend@sina.com</a>，现在我们用Outlook或者Foxmail之类的软件写好邮件，填上对方的Email地址，点“发送”，电子邮件就发出去了。这些电子邮件软件被称为MUA：Mail User Agent——邮件用户代理。<br>Email从MUA发出去，不是直接到达对方电脑，而是发到MTA：Mail Transfer Agent——邮件传输代理，就是那些Email服务提供商，比如网易、新浪等等。由于我们自己的电子邮件是163.com，所以，Email首先被投递到网易提供的MTA，再由网易的MTA发到对方服务商，也就是新浪的MTA。<br>Email到达新浪的MTA后，由于对方使用的是@sina.com的邮箱，因此，新浪的MTA会把Email投递到邮件的最终目的地MDA：Mail Delivery Agent——邮件投递代理。Email到达MDA后，就静静地躺在新浪的某个服务器上，存放在某个文件或特殊的数据库里，我们将这个长期保存邮件的地方称之为电子邮箱。<br>Email不会直接到达对方的电脑，因为对方电脑不一定开机，开机也不一定联网。对方要取到邮件，必须通过MUA从MDA上把邮件取到自己的电脑上。<br>所以，一封电子邮件的旅程就是：<br>发件人 -&gt; MUA -&gt; MTA -&gt; MTA -&gt; 若干个MTA -&gt; MDA &lt;- MUA &lt;- 收件人<br>发邮件时，MUA和MTA使用的协议就是SMTP：Simple Mail Transfer Protocol；<br>收邮件时，MUA和MDA使用的协议有两种：</p><ul><li>POP：Post Office Protocol，目前版本是3，俗称POP3；</li><li>IMAP：Internet Message Access Protocol，目前版本是4，优点是不但能取邮件，还可以直接操作MDA上存储的邮件，比如从收件箱移到垃圾箱。</li></ul><p>邮件客户端软件在发邮件时，会让你先配置SMTP服务器，也就是你要发到哪个MTA上。假设你正在使用163的邮箱，你就不能直接发到新浪的MTA上，因为它只服务新浪的用户，所以，你得填163提供的SMTP服务器地址：<code>smtp.163.com</code>，为了证明你是163的用户，SMTP服务器还要求你填写邮箱地址和邮箱口令，这样，MUA才能正常地把Email通过SMTP协议发送到MTA。 </p><h2 id="二、SMTP发送邮件"><a href="#二、SMTP发送邮件" class="headerlink" title="二、SMTP发送邮件"></a>二、SMTP发送邮件</h2><p>SMTP是发送邮件的协议，Python内置对SMTP的支持，可以发送纯文本邮件、HTML邮件以及带附件的邮件。<br>Python 对SMTP支持有<code>smtplib</code>和<code>email</code>两个模块，email负责构造邮件，smtplib负责发送邮件。<br>首先构造一个最简单的纯文本邮件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"></span><br><span class="line">msg=MIMEText(<span class="string">'Hello,Send by Python..'</span>,<span class="string">'plain'</span>,<span class="string">'utf-8'</span>)</span><br><span class="line">from_addr = input(<span class="string">'From: '</span>)</span><br><span class="line">password = input(<span class="string">'Password: '</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 收件人地址</span></span><br><span class="line">to_addr = input(<span class="string">'To: '</span>)</span><br><span class="line"></span><br><span class="line">smtp_server = input(<span class="string">'SMTP server: '</span>)</span><br><span class="line">server = smtplib.SMTP(smtp_server,<span class="number">25</span>)</span><br><span class="line">server.set_debuglevel(<span class="number">1</span>)</span><br><span class="line">server.login(from_addr,password)</span><br><span class="line">server.sendmail(from_addr, [to_addr], msg.as_string())</span><br><span class="line">server.quit()</span><br></pre></td></tr></table></figure><p>构造MIMEText对象时，第一个参数就是邮件正文，第二个参数是MIME的subtype，传入’plain’表示纯文本，最终的MIME就是’text/plain’，最后一定要用utf-8编码保证多语言兼容性。<br>用<code>set_debuglevel(1)</code>就可以打印出和SMTP服务器交互的所有信息。SMTP协议就是简单的文本命令和响应。<code>login()</code>方法用来登录SMTP服务器，<code>sendmail()</code>方法就是发邮件，由于可以一次发给多个人，所以传入一个list，邮件正文是一个str，<code>as_string()</code>把MIMEText对象变成str。</p><p>测试后发现用上面的方法发送会有问题：<br>1、邮件没有主题<br>2、收件人名字显示不友好<br>3、收到邮件却显示不在不在收件人中</p><p>这是因为邮件主题、如何显示发件人、收件人等信息并不是通过SMTP协议发给MTA，而是包含在发给MTA的文本中的，所以，我们必须把From、To和Subject添加到MIMEText中，才是一封完整的邮件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># Send email by Python3</span></span><br><span class="line"><span class="keyword">from</span> email <span class="keyword">import</span> encoders</span><br><span class="line"><span class="keyword">from</span> email.header <span class="keyword">import</span> Header</span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"><span class="keyword">from</span> email.utils <span class="keyword">import</span> parseaddr,formataddr</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_format_addr</span><span class="params">(s)</span>:</span></span><br><span class="line">name,addr = parseaddr(s)</span><br><span class="line"><span class="keyword">return</span> formataddr((Header(name,<span class="string">'utf-8'</span>).encode(),addr))</span><br><span class="line"></span><br><span class="line">from_addr = input(<span class="string">'From: '</span>)</span><br><span class="line">password = input(<span class="string">'Password: '</span>)</span><br><span class="line">to_addr = input(<span class="string">'To: '</span>)</span><br><span class="line">smtp_server = input(<span class="string">'SMTP server: '</span>)</span><br><span class="line"></span><br><span class="line">msg=MIMEText(<span class="string">'Hello,send by Python...'</span>,<span class="string">'plain'</span>,<span class="string">'utf-8'</span>)</span><br><span class="line">msg[<span class="string">'From'</span>] = _format_addr(<span class="string">'Python爱好 &lt;%s&gt;'</span> %from_addr)</span><br><span class="line">msg[<span class="string">'To'</span>] = _format_addr(<span class="string">'管理员 &lt;%s&gt;'</span> %to_addr)</span><br><span class="line">msg[<span class="string">'Subject'</span>] = Header(<span class="string">'来自SMTP'</span>,<span class="string">'utf-8'</span>).encode()</span><br><span class="line"></span><br><span class="line">server=smtplib.SMTP(smtp_server,<span class="number">25</span>)</span><br><span class="line">server.set_debuglevel(<span class="number">1</span>)</span><br><span class="line">server.login(from_addr,password)</span><br><span class="line">server.sendmail(from_addr, [to_addr], msg.as_string())</span><br><span class="line">server.quit()</span><br></pre></td></tr></table></figure><p>这样便可以发送一个正常额邮件。注意发件人邮箱的密码为客户端授权密码，可网页登录邮箱进入管理后台查看。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Email的历史比Web还要久远，直到现在，Email也是互联网上应用非常广泛的服务。本文介绍邮件的传递过程及使用Python实现邮件的发送。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://blog.crazylinux.cc/categories/Python/"/>
    
    
      <category term="Python" scheme="https://blog.crazylinux.cc/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 安装 Python3</title>
    <link href="https://blog.crazylinux.cc/post/2017/centos-install-python3/"/>
    <id>https://blog.crazylinux.cc/post/2017/centos-install-python3/</id>
    <published>2017-12-21T12:04:24.000Z</published>
    <updated>2018-10-18T14:45:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>CentOS 默认只安装 Python2 ,但未来主流的仍是 Python3，因此有必要在 CentOS 上安装 Python3，以下方式介绍在 CentOS 上编译安装Python3并解决安装后yum无法正常使用的问题。</p><a id="more"></a><h4 id="1、下载Python源代码"><a href="#1、下载Python源代码" class="headerlink" title="1、下载Python源代码"></a>1、下载Python源代码</h4><pre><code>wget https://www.python.org/ftp/python/3.6.1/Python-3.6.1.tgz</code></pre><h4 id="2、安装依赖包"><a href="#2、安装依赖包" class="headerlink" title="2、安装依赖包"></a>2、安装依赖包</h4><pre><code>yum -y install openssl-devel bzip2-devel expat-devel gdbm-devel readline-devel sqlite-devel</code></pre><h4 id="3、解压源码包"><a href="#3、解压源码包" class="headerlink" title="3、解压源码包"></a>3、解压源码包</h4><pre><code>tar -xzvf Python-3.6.1.tgzcd  Python-3.6.1/</code></pre><h4 id="4、把Python3-6安装到-usr-local-目录"><a href="#4、把Python3-6安装到-usr-local-目录" class="headerlink" title="4、把Python3.6安装到 /usr/local 目录"></a>4、把Python3.6安装到 /usr/local 目录</h4><pre><code>./configure  --prefix=/usr/local/makemake altinstall</code></pre><p>此处使用 <code>make altinstall</code> 安装是为了使Python2 和Python3 能共存，具体可见压缩包里的<code>README</code>文件.</p><p>python3.6程序的执行文件：<code>/usr/local/bin/python3.6</code><br>python3.6应用程序目录：<code>/usr/local/lib/python3.6</code><br>pip3的执行文件：<code>/usr/local/bin/pip3.6</code><br>pyenv3的执行文件：<code>/usr/local/bin/pyenv-3.6</code></p><h4 id="5、更改Python链接"><a href="#5、更改Python链接" class="headerlink" title="5、更改Python链接"></a>5、更改Python链接</h4><p>当在命令行输入Python时默认打开的是Python2版本，现在把它改为Python3；</p><pre><code>cd/usr/binmv  python python.backupln -s /usr/local/bin/python3.6 /usr/bin/pythonln -s /usr/local/bin/python3.6 /usr/bin/python3rm -rf /usr/bin/python2 ln -s /usr/bin/python2.6 /usr/bin/python2 </code></pre><h4 id="6、更改yum脚本的Python依赖"><a href="#6、更改yum脚本的Python依赖" class="headerlink" title="6、更改yum脚本的Python依赖"></a>6、更改yum脚本的Python依赖</h4><p>现在如果执行yum相关的命令，会发现不能正常执行，因为yum是用Python2开发的，然而此时Python默认指向的是Python3,二者的语法不兼容，所以会出现报错，为了解决此问题，需要修改yum相关命令的python依赖环境</p><pre><code>$ cd /usr/bin$ ls yum*yum yum-config-manager yum-debug-restore yum-groups-manager yum-builddep yum-debug-dump yumdownloader</code></pre><p>使用<code>vim</code>更改以上文件头为<br><code>!/usr/bin/python</code> 改为 <code>#!/usr/bin/python2</code></p><p>这样便能很好的解决Python的版本问题及yum不能正常使用的问题。</p><h3 id="附：快捷办法"><a href="#附：快捷办法" class="headerlink" title="附：快捷办法"></a>附：快捷办法</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> yum install epel-release</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum makecache</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum install -y python36</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CentOS 默认只安装 Python2 ,但未来主流的仍是 Python3，因此有必要在 CentOS 上安装 Python3，以下方式介绍在 CentOS 上编译安装Python3并解决安装后yum无法正常使用的问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="CentOS" scheme="https://blog.crazylinux.cc/categories/CentOS/"/>
    
    
      <category term="CentOS" scheme="https://blog.crazylinux.cc/tags/CentOS/"/>
    
      <category term="Python" scheme="https://blog.crazylinux.cc/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Alpine 基本配置</title>
    <link href="https://blog.crazylinux.cc/post/2017/alpine-basic-config/"/>
    <id>https://blog.crazylinux.cc/post/2017/alpine-basic-config/</id>
    <published>2017-12-11T03:50:25.000Z</published>
    <updated>2017-12-11T04:43:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>alpine作为一个轻量级docker容器已经是很流行了，alpine linux也是一个很轻量级的linux系统，网上关于docker下配置alpine的例子不少，很少有基于alpine下配置docker环境的，本例即为虚拟机下安装alpine同时配置docker环境</p><a id="more"></a><h4 id="1、下载alpine-linux镜像"><a href="#1、下载alpine-linux镜像" class="headerlink" title="1、下载alpine linux镜像"></a>1、下载alpine linux镜像</h4><p><a href="http://mirrors.aliyun.com/" target="_blank" rel="noopener">http://mirrors.aliyun.com/</a></p><h4 id="2、配置虚拟机"><a href="#2、配置虚拟机" class="headerlink" title="2、配置虚拟机"></a>2、配置虚拟机</h4><p>资源分配根据需要可调整，安装过程需要连接外网，dhcp分配IP，开启虚拟机，使用root登录系统，此时不需要密码，直接登录。</p><h4 id="3、安装alpine-linux"><a href="#3、安装alpine-linux" class="headerlink" title="3、安装alpine linux"></a>3、安装alpine linux</h4><p>执行setup-alpine进行安装设置，设置完后重启进入系统</p><h4 id="4、安装后配置"><a href="#4、安装后配置" class="headerlink" title="4、安装后配置"></a>4、安装后配置</h4><p>使用root登录，先新进一个用户，alpine linux默认不能使用root远程登录</p><pre><code>useradd tempasswd tem</code></pre><p>使用tem 用户远程登录后在切换到root</p><pre><code>su - root</code></pre><h4 id="5、修改镜像源"><a href="#5、修改镜像源" class="headerlink" title="5、修改镜像源"></a>5、修改镜像源</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vi /etc/apk/repositories</span></span><br><span class="line">http://mirrors.ustc.edu.cn/alpine/v3.7/main</span><br><span class="line">http://mirrors.ustc.edu.cn/alpine/v3.7/community</span><br></pre></td></tr></table></figure><h4 id="6、基本安装"><a href="#6、基本安装" class="headerlink" title="6、基本安装"></a>6、基本安装</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apk update</span><br><span class="line">apk add vim git</span><br></pre></td></tr></table></figure><h4 id="7、安装docker"><a href="#7、安装docker" class="headerlink" title="7、安装docker"></a>7、安装docker</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apk add docker</span><br><span class="line">rc-update add docker boot    #加入开机自启</span><br><span class="line">service docker start</span><br><span class="line">docker version               #查看版本信息</span><br></pre></td></tr></table></figure><h4 id="8、安装docker-compose"><a href="#8、安装docker-compose" class="headerlink" title="8、安装docker-compose"></a>8、安装docker-compose</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apk add py-pip</span><br><span class="line">pip install docker-compose</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;alpine作为一个轻量级docker容器已经是很流行了，alpine linux也是一个很轻量级的linux系统，网上关于docker下配置alpine的例子不少，很少有基于alpine下配置docker环境的，本例即为虚拟机下安装alpine同时配置docker环境&lt;/p&gt;
    
    </summary>
    
    
      <category term="Docker" scheme="https://blog.crazylinux.cc/categories/Docker/"/>
    
    
      <category term="Docker" scheme="https://blog.crazylinux.cc/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7 配置MariaDB数据库</title>
    <link href="https://blog.crazylinux.cc/post/2017/centos-config-mariadb/"/>
    <id>https://blog.crazylinux.cc/post/2017/centos-config-mariadb/</id>
    <published>2017-10-30T12:22:58.000Z</published>
    <updated>2018-10-18T14:40:18.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/mariadb-logo.png" alt="mariadb"><br>自从<code>MySQL</code>数据库被oracle公司收购不在开源后，MySQL的作者就重新开发了一个完全兼容MySQL的数据库软件取名叫MariaDB.在MySQL的基础上加入了一些新的特性，很快得到了开源社区的支持。新版的CentOS7也使用MariaDB替代了MySQL，本文介绍在CentOS7上安装完MySQL后的一些基本配置。</p><a id="more"></a><h4 id="安装MariaDB数据库"><a href="#安装MariaDB数据库" class="headerlink" title="安装MariaDB数据库"></a>安装MariaDB数据库</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ yum update</span><br><span class="line">$ yum install -y mariadb-server</span><br></pre></td></tr></table></figure><h4 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h4><ul><li>mysqld ——服务器程序，守护进程</li><li>mysql  ——客户端</li><li>3306—–监听端口</li><li><em>服务器管理工具：*</em><br>   1、mysqlaccess    用于创建账户和设置权限<br>   2、mysqladmin      命令行的数据库管理工具，交互式地查询服务器的状态和使用量，以及关闭服务；<br>   3、mysqlshow       即可显示各数据库和各表的信息，又可查看服务器状态；<br>   4、mysqldump      导出dump文件</li></ul><h4 id="修改MariaDB的配置文件"><a href="#修改MariaDB的配置文件" class="headerlink" title="修改MariaDB的配置文件"></a>修改MariaDB的配置文件</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/my.cnf.d/server.cnf</span><br><span class="line">[mysqld]</span><br><span class="line"><span class="comment"># 让MariaDB支持中文编码</span></span><br><span class="line">character-set-server=utf8</span><br><span class="line">collation-server=utf8_general_ci</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/my.cnf.d/mysql-clients.cnf</span><br><span class="line">[mysql]</span><br><span class="line">default-character-set=utf8</span><br></pre></td></tr></table></figure><p>更改编码为utf-8，加入上面的配置后便可以在数据库表中插入中文的数据。</p><h4 id="启动MariaDB数据库服务"><a href="#启动MariaDB数据库服务" class="headerlink" title="启动MariaDB数据库服务"></a>启动MariaDB数据库服务</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start mariadb.service</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> mariadb.service</span><br></pre></td></tr></table></figure><h4 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h4><pre><code>mysql_secure_installation</code></pre><h4 id="修改root用户密码"><a href="#修改root用户密码" class="headerlink" title="修改root用户密码"></a>修改root用户密码</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mysqladmin -u root -p flush-privileges password “xxxxx”</span><br></pre></td></tr></table></figure><h4 id="创建新的用户"><a href="#创建新的用户" class="headerlink" title="创建新的用户"></a>创建新的用户</h4><p>使用<code>MariaDB</code>时不建议使用root账户进行操作，建议新建一个用户进行操作，可以保证数据库的安全性。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p -e <span class="string">"GRANT ALL ON *.* TO 'vicent'@'%';"</span></span><br></pre></td></tr></table></figure><p>上面新建了一个叫vicent的新账户，设置对所有的数据库都有权限，最后的<code>%</code>表示通过<code>vicent</code>这个账户可以从任何地方连接到这个<code>MariaDB</code>服务器。</p><h4 id="查看用户信息"><a href="#查看用户信息" class="headerlink" title="查看用户信息"></a>查看用户信息</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p -e <span class="string">"SELECT User,Host FROM mysql.user;”</span></span><br></pre></td></tr></table></figure><h4 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; drop user 用户名@localhost;</span><br></pre></td></tr></table></figure><h4 id="修改用户密码"><a href="#修改用户密码" class="headerlink" title="修改用户密码"></a>修改用户密码</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; set password for vicent@‘%’ = password(‘123’);</span><br></pre></td></tr></table></figure><h4 id="远程连接到MariaDB数据库"><a href="#远程连接到MariaDB数据库" class="headerlink" title="远程连接到MariaDB数据库"></a>远程连接到MariaDB数据库</h4><p>使用mycli连接数据库，<code>mycli</code>是<code>Python</code>实现的<code>MySQL</code>客户端，支持代码高亮和智能提示，用于如下命令安装<code>mycli</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install mycli</span><br></pre></td></tr></table></figure><p>在另一台电脑上连接到<code>MariaDB</code>数据库：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mycli -h 192.168.22.156 -u vicent</span><br></pre></td></tr></table></figure><p>学习<code>MariaDB</code>数据库，建议先看看《SQL基础教程》这本书学习<code>SQL</code>语句。本书是一本非常适合初学者入门<code>SQL</code>语句的书。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/mariadb-logo.png&quot; alt=&quot;mariadb&quot;&gt;&lt;br&gt;自从&lt;code&gt;MySQL&lt;/code&gt;数据库被oracle公司收购不在开源后，MySQL的作者就重新开发了一个完全兼容MySQL的数据库软件取名叫MariaDB.在MySQL的基础上加入了一些新的特性，很快得到了开源社区的支持。新版的CentOS7也使用MariaDB替代了MySQL，本文介绍在CentOS7上安装完MySQL后的一些基本配置。&lt;/p&gt;
    
    </summary>
    
    
      <category term="CentOS" scheme="https://blog.crazylinux.cc/categories/CentOS/"/>
    
    
      <category term="CentOS" scheme="https://blog.crazylinux.cc/tags/CentOS/"/>
    
      <category term="MariaDB" scheme="https://blog.crazylinux.cc/tags/MariaDB/"/>
    
  </entry>
  
  <entry>
    <title>CentOS搭建FTP服务器</title>
    <link href="https://blog.crazylinux.cc/post/2017/centos-install-ftp-server/"/>
    <id>https://blog.crazylinux.cc/post/2017/centos-install-ftp-server/</id>
    <published>2017-10-13T13:08:08.000Z</published>
    <updated>2018-10-18T14:42:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/FTP-Server.png" alt="ftp"><br>FTP是文件传输协议，可实现Windows和Linux之间快速的上传和下载文件。CentOS下搭建FTP服务器一般使用<code>vsftpd</code>,搭建的环境为<code>CentOS7.4</code>,下面是搭建和配置过程。</p><a id="more"></a><h3 id="安装FTP服务"><a href="#安装FTP服务" class="headerlink" title="安装FTP服务"></a>安装FTP服务</h3><pre><code>$ sudo yum -y install vsftpd</code></pre><h3 id="配置FTP服务器"><a href="#配置FTP服务器" class="headerlink" title="配置FTP服务器"></a>配置FTP服务器</h3><h4 id="了解vsftpd配置"><a href="#了解vsftpd配置" class="headerlink" title="了解vsftpd配置"></a>了解vsftpd配置</h4><p>vsftpd的配置目录为<code>/etc/vsftpd</code>,主要包括下面的配置文件：</p><ul><li>vsftpd.conf  主配置文件</li><li>ftpusers  配置禁止访问FTP服务器的用户列表</li><li>user_list 配置用户访问控制</li></ul><p>FTP服务器的身份验证模式：</p><ul><li>匿名开放—无需密码验证可登陆FTP服务器，最不安全</li><li>本地用户—通过Linux本地的账号密码进行验证，存在暴力破解的风险，相对安全；</li><li>虚拟用户—FTP传输服务单独建立数据库文件，虚拟出来口令验证的账户信息，但账号是在服务器系统不存在，仅供FTP传输服务验证使用，最安全；<br>为了保证安全性，本文配置的FTP服务器为匿名访问模式；</li></ul><h4 id="阻止匿名访问和切换根目录"><a href="#阻止匿名访问和切换根目录" class="headerlink" title="阻止匿名访问和切换根目录"></a>阻止匿名访问和切换根目录</h4><p>匿名访问和切换根目录都会给服务器带来安全风险，建议关闭这两个功能。编辑主配置文件</p><pre><code class="shell"><span class="meta">$</span><span class="bash"> sudo vim /etc/vsftpd/vsftpd.conf</span><span class="meta"> #</span><span class="bash"> 禁止匿名用户 </span>anonymous_enble=NO<span class="meta"> #</span><span class="bash"> 禁止切换根目录</span>chroot_local_user=YES<span class="meta"> #</span><span class="bash"> 开启虚拟用户模式</span>guest_enable=YESlisten=YESlisten_port=21download_enable=YES</code></pre><p>编辑完后<code>:wq</code>保存退出。</p><h4 id="创建FTP用户"><a href="#创建FTP用户" class="headerlink" title="创建FTP用户"></a>创建FTP用户</h4><p>创建一个新的用户<code>ftpuser</code></p><pre><code>$ sudo useradd ftpuser</code></pre><p>为用户ftpuser设置密码，xxx改为自己的密码</p><pre><code>$ echo &quot;xxxxx&quot; |passwd ftpuser --stdin</code></pre><h4 id="限制FTP用户只能FTP访问"><a href="#限制FTP用户只能FTP访问" class="headerlink" title="限制FTP用户只能FTP访问"></a>限制FTP用户只能FTP访问</h4><p>为了安全，限制用户ftpuser只能通过FTP访问服务器，而不能直接登录服务器。</p><pre><code>$ usermod -s /sbin/nologin ftpuser</code></pre><h4 id="为用户分配主目录"><a href="#为用户分配主目录" class="headerlink" title="为用户分配主目录"></a>为用户分配主目录</h4><p>FTP服务器默认的访问目录为<code>/var/ftp</code></p><h3 id="启动FTP服务器并开机自启"><a href="#启动FTP服务器并开机自启" class="headerlink" title="启动FTP服务器并开机自启"></a>启动FTP服务器并开机自启</h3><pre><code>$ sudo systemctl start vsftpd$ sudo systemctl enble vsftpd</code></pre><h3 id="设置防火墙允许FTP访问"><a href="#设置防火墙允许FTP访问" class="headerlink" title="设置防火墙允许FTP访问"></a>设置防火墙允许FTP访问</h3><p>设置防火墙永久允许FTP访问</p><pre><code>$ firewall-cmd --add-service=ftp --permanent$ firewall-cmd --reload  # 重载防火墙</code></pre><h3 id="访问FTP服务器"><a href="#访问FTP服务器" class="headerlink" title="访问FTP服务器"></a>访问FTP服务器</h3><ul><li><p>方案一：<br>Windows的资源管理器地址栏里输入<a href="ftp://ftpuser:xxxxx@192.168.22.156">ftp://ftpuser:xxxxx@192.168.22.156</a></p></li><li><p>方案二：<br>通过FTP客户端工具访问<br>使用开源免费并且跨平台的<code>FileZilla</code>客户端访问，填入FTP服务器的IP地址，用户名和密码便可以访问。</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/FTP-Server.png&quot; alt=&quot;ftp&quot;&gt;&lt;br&gt;FTP是文件传输协议，可实现Windows和Linux之间快速的上传和下载文件。CentOS下搭建FTP服务器一般使用&lt;code&gt;vsftpd&lt;/code&gt;,搭建的环境为&lt;code&gt;CentOS7.4&lt;/code&gt;,下面是搭建和配置过程。&lt;/p&gt;
    
    </summary>
    
    
      <category term="CentOS" scheme="https://blog.crazylinux.cc/categories/CentOS/"/>
    
    
      <category term="CentOS" scheme="https://blog.crazylinux.cc/tags/CentOS/"/>
    
      <category term="Linux" scheme="https://blog.crazylinux.cc/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7基本配置</title>
    <link href="https://blog.crazylinux.cc/post/2017/centos-basic-config/"/>
    <id>https://blog.crazylinux.cc/post/2017/centos-basic-config/</id>
    <published>2017-10-02T13:49:46.000Z</published>
    <updated>2018-10-18T15:41:12.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/centos.png" alt="centos"><br>CentOS是目前主流的服务器发行版本，本文介绍CentOS初始化安装后的一些基本配置，版本为最新的CentOS7.4.安装时勾选安装基本的开发组件。</p><a id="more"></a><h3 id="配置网络"><a href="#配置网络" class="headerlink" title="配置网络"></a>配置网络</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo nmtui  <span class="comment">#  配置IP</span></span><br><span class="line">sudo systemctl start network</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> network</span><br></pre></td></tr></table></figure><h3 id="修改yum源"><a href="#修改yum源" class="headerlink" title="修改yum源"></a>修改yum源</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure><h3 id="更新系统"><a href="#更新系统" class="headerlink" title="更新系统"></a>更新系统</h3><pre><code>$ yum -y update</code></pre><h3 id="安装pip"><a href="#安装pip" class="headerlink" title="安装pip"></a>安装pip</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum -y install epel-release</span><br><span class="line">yum -y install python-pip</span><br><span class="line">sudo pip install --upgrade pip</span><br></pre></td></tr></table></figure><h3 id="安装-zsh-oh-my-zsh"><a href="#安装-zsh-oh-my-zsh" class="headerlink" title="安装 zsh + oh my zsh"></a>安装 zsh + oh my zsh</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ yum install zsh</span><br><span class="line">$ git <span class="built_in">clone</span> git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh</span><br><span class="line">$ git <span class="built_in">clone</span> git://github.com/jimmijj/zsh-syntax-highlighting ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting</span><br><span class="line">$ cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc</span><br><span class="line">chsh -s /bin/zsh</span><br><span class="line">$ vim ~/.zshrc</span><br><span class="line">ZSH_THEME=<span class="string">"sammy"</span></span><br><span class="line">plugins=(</span><br><span class="line">zsh-syntax-highlighting</span><br><span class="line">git)</span><br></pre></td></tr></table></figure><h3 id="安装vim"><a href="#安装vim" class="headerlink" title="安装vim"></a>安装vim</h3><pre><code>$ yum -y install vim</code></pre><h3 id="配置vim"><a href="#配置vim" class="headerlink" title="配置vim"></a>配置vim</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS7] ~$ vim ~/.vimrc</span><br><span class="line">" 开启语法高亮</span><br><span class="line">syntax on </span><br><span class="line">" 检测文件类型</span><br><span class="line">filetype on</span><br><span class="line">" 设置在Vim中可以使用鼠标，防止终端无法拷贝</span><br><span class="line">if has('mouse')</span><br><span class="line">    set mouse-=a</span><br><span class="line">endif</span><br><span class="line">" 显示当前行号和列号</span><br><span class="line">set ruler</span><br><span class="line">" 在状态栏显示正在输入的命令</span><br><span class="line">set showcmd</span><br><span class="line">" 左下角显示当前Vim模式</span><br><span class="line">set showmode</span><br><span class="line">" 显示行号</span><br><span class="line">"set number</span><br><span class="line">" 设置tab宽度</span><br><span class="line">set tabstop=4  </span><br><span class="line">" 智能自动缩进</span><br><span class="line">set smartindent</span><br><span class="line">" 设置自动对齐空格数</span><br><span class="line">set shiftwidth=4</span><br><span class="line">" 设置编码方式</span><br><span class="line"> set encoding=utf-8</span><br><span class="line"> </span><br><span class="line"> set helplang=cn</span><br><span class="line"> set shiftwidth=4</span><br><span class="line"> set softtabstop=4</span><br><span class="line"> set magic</span><br><span class="line"> set cursorline</span><br><span class="line"> </span><br><span class="line"> set hlsearch</span><br><span class="line"> set incsearch</span><br><span class="line"> set autoindent</span><br><span class="line"> </span><br><span class="line"> " 使用空格代替tab</span><br><span class="line"> set expandtab</span><br><span class="line"> set smarttab</span><br></pre></td></tr></table></figure><h3 id="安装常用软件"><a href="#安装常用软件" class="headerlink" title="安装常用软件"></a>安装常用软件</h3><pre><code>$ yum install -y net-tools git htop lrzsz</code></pre><h3 id="安装中文支持包"><a href="#安装中文支持包" class="headerlink" title="安装中文支持包"></a>安装中文支持包</h3><pre><code>$ yum -y groupinstall chinese-support</code></pre><h3 id="安装基本编译环境"><a href="#安装基本编译环境" class="headerlink" title="安装基本编译环境"></a>安装基本编译环境</h3><pre><code>$ yum -y install gcc gcc-c++ make</code></pre><h3 id="关闭SELinux"><a href="#关闭SELinux" class="headerlink" title="关闭SELinux"></a>关闭SELinux</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vim /etc/selinux/config</span></span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/centos.png&quot; alt=&quot;centos&quot;&gt;&lt;br&gt;CentOS是目前主流的服务器发行版本，本文介绍CentOS初始化安装后的一些基本配置，版本为最新的CentOS7.4.安装时勾选安装基本的开发组件。&lt;/p&gt;
    
    </summary>
    
    
      <category term="CentOS" scheme="https://blog.crazylinux.cc/categories/CentOS/"/>
    
    
      <category term="CentOS" scheme="https://blog.crazylinux.cc/tags/CentOS/"/>
    
      <category term="Linux" scheme="https://blog.crazylinux.cc/tags/Linux/"/>
    
  </entry>
  
</feed>
